"use strict";(()=>{const functors=[({imports:$h‍_imports,liveVar:$h‍_live,onceVar:$h‍_once,importMeta:$h‍____meta})=>{$h‍_imports([]);const universalThis=globalThis;$h‍_once.universalThis(universalThis);const{Array:Array,Date:Date,FinalizationRegistry:FinalizationRegistry,Float32Array:Float32Array,JSON:JSON,Map:Map,Math:Math,Number:Number,Object:Object,Promise:Promise,Proxy:Proxy,Reflect:Reflect,RegExp:FERAL_REG_EXP,Set:Set,String:String,Symbol:Symbol,WeakMap:WeakMap,WeakSet:WeakSet}=globalThis;$h‍_once.Array(Array),$h‍_once.Date(Date),$h‍_once.FinalizationRegistry(FinalizationRegistry),$h‍_once.Float32Array(Float32Array),$h‍_once.JSON(JSON),$h‍_once.Map(Map),$h‍_once.Math(Math),$h‍_once.Number(Number),$h‍_once.Object(Object),$h‍_once.Promise(Promise),$h‍_once.Proxy(Proxy),$h‍_once.Reflect(Reflect),$h‍_once.FERAL_REG_EXP(FERAL_REG_EXP),$h‍_once.Set(Set),$h‍_once.String(String),$h‍_once.Symbol(Symbol),$h‍_once.WeakMap(WeakMap),$h‍_once.WeakSet(WeakSet);const{Error:FERAL_ERROR,RangeError:RangeError,ReferenceError:ReferenceError,SyntaxError:SyntaxError,TypeError:TypeError}=globalThis;$h‍_once.FERAL_ERROR(FERAL_ERROR),$h‍_once.RangeError(RangeError),$h‍_once.ReferenceError(ReferenceError),$h‍_once.SyntaxError(SyntaxError),$h‍_once.TypeError(TypeError);const{assign:assign,create:create,defineProperties:defineProperties,entries:entries,freeze:freeze,getOwnPropertyDescriptor:getOwnPropertyDescriptor,getOwnPropertyDescriptors:getOwnPropertyDescriptors,getOwnPropertyNames:getOwnPropertyNames,getPrototypeOf:getPrototypeOf,is:is,isFrozen:isFrozen,isSealed:isSealed,isExtensible:isExtensible,keys:keys,prototype:objectPrototype,seal:seal,preventExtensions:preventExtensions,setPrototypeOf:setPrototypeOf,values:values,fromEntries:fromEntries}=Object;$h‍_once.assign(assign),$h‍_once.create(create),$h‍_once.defineProperties(defineProperties),$h‍_once.entries(entries),$h‍_once.freeze(freeze),$h‍_once.getOwnPropertyDescriptor(getOwnPropertyDescriptor),$h‍_once.getOwnPropertyDescriptors(getOwnPropertyDescriptors),$h‍_once.getOwnPropertyNames(getOwnPropertyNames),$h‍_once.getPrototypeOf(getPrototypeOf),$h‍_once.is(is),$h‍_once.isFrozen(isFrozen),$h‍_once.isSealed(isSealed),$h‍_once.isExtensible(isExtensible),$h‍_once.keys(keys),$h‍_once.objectPrototype(objectPrototype),$h‍_once.seal(seal),$h‍_once.preventExtensions(preventExtensions),$h‍_once.setPrototypeOf(setPrototypeOf),$h‍_once.values(values),$h‍_once.fromEntries(fromEntries);const{species:speciesSymbol,toStringTag:toStringTagSymbol,iterator:iteratorSymbol,matchAll:matchAllSymbol,unscopables:unscopablesSymbol,keyFor:symbolKeyFor,for:symbolFor}=Symbol;$h‍_once.speciesSymbol(speciesSymbol),$h‍_once.toStringTagSymbol(toStringTagSymbol),$h‍_once.iteratorSymbol(iteratorSymbol),$h‍_once.matchAllSymbol(matchAllSymbol),$h‍_once.unscopablesSymbol(unscopablesSymbol),$h‍_once.symbolKeyFor(symbolKeyFor),$h‍_once.symbolFor(symbolFor);const{isInteger:isInteger}=Number;$h‍_once.isInteger(isInteger);const{stringify:stringifyJson}=JSON;$h‍_once.stringifyJson(stringifyJson);const{defineProperty:originalDefineProperty}=Object;$h‍_once.defineProperty(((object,prop,descriptor)=>{const result=originalDefineProperty(object,prop,descriptor);if(result!==object)throw TypeError(`Please report that the original defineProperty silently failed to set ${stringifyJson(String(prop))}. (SES_DEFINE_PROPERTY_FAILED_SILENTLY)`);return result}));const{apply:apply,construct:construct,get:reflectGet,getOwnPropertyDescriptor:reflectGetOwnPropertyDescriptor,has:reflectHas,isExtensible:reflectIsExtensible,ownKeys:ownKeys,preventExtensions:reflectPreventExtensions,set:reflectSet}=Reflect;$h‍_once.apply(apply),$h‍_once.construct(construct),$h‍_once.reflectGet(reflectGet),$h‍_once.reflectGetOwnPropertyDescriptor(reflectGetOwnPropertyDescriptor),$h‍_once.reflectHas(reflectHas),$h‍_once.reflectIsExtensible(reflectIsExtensible),$h‍_once.ownKeys(ownKeys),$h‍_once.reflectPreventExtensions(reflectPreventExtensions),$h‍_once.reflectSet(reflectSet);const{isArray:isArray,prototype:arrayPrototype}=Array;$h‍_once.isArray(isArray),$h‍_once.arrayPrototype(arrayPrototype);const{prototype:mapPrototype}=Map;$h‍_once.mapPrototype(mapPrototype);const{revocable:proxyRevocable}=Proxy;$h‍_once.proxyRevocable(proxyRevocable);const{prototype:regexpPrototype}=RegExp;$h‍_once.regexpPrototype(regexpPrototype);const{prototype:setPrototype}=Set;$h‍_once.setPrototype(setPrototype);const{prototype:stringPrototype}=String;$h‍_once.stringPrototype(stringPrototype);const{prototype:weakmapPrototype}=WeakMap;$h‍_once.weakmapPrototype(weakmapPrototype);const{prototype:weaksetPrototype}=WeakSet;$h‍_once.weaksetPrototype(weaksetPrototype);const{prototype:functionPrototype}=Function;$h‍_once.functionPrototype(functionPrototype);const{prototype:promisePrototype}=Promise;$h‍_once.promisePrototype(promisePrototype);const typedArrayPrototype=getPrototypeOf(Uint8Array.prototype);$h‍_once.typedArrayPrototype(typedArrayPrototype);const{bind:bind}=functionPrototype,uncurryThis=bind.bind(bind.call);$h‍_once.uncurryThis(uncurryThis);const objectHasOwnProperty=uncurryThis(objectPrototype.hasOwnProperty);$h‍_once.objectHasOwnProperty(objectHasOwnProperty);const arrayFilter=uncurryThis(arrayPrototype.filter);$h‍_once.arrayFilter(arrayFilter);const arrayForEach=uncurryThis(arrayPrototype.forEach);$h‍_once.arrayForEach(arrayForEach);const arrayIncludes=uncurryThis(arrayPrototype.includes);$h‍_once.arrayIncludes(arrayIncludes);const arrayJoin=uncurryThis(arrayPrototype.join);$h‍_once.arrayJoin(arrayJoin);const arrayMap=uncurryThis(arrayPrototype.map);$h‍_once.arrayMap(arrayMap);const arrayPop=uncurryThis(arrayPrototype.pop);$h‍_once.arrayPop(arrayPop);const arrayPush=uncurryThis(arrayPrototype.push);$h‍_once.arrayPush(arrayPush);const arraySlice=uncurryThis(arrayPrototype.slice);$h‍_once.arraySlice(arraySlice);const arraySome=uncurryThis(arrayPrototype.some);$h‍_once.arraySome(arraySome);const arraySort=uncurryThis(arrayPrototype.sort);$h‍_once.arraySort(arraySort);const iterateArray=uncurryThis(arrayPrototype[iteratorSymbol]);$h‍_once.iterateArray(iterateArray);const mapSet=uncurryThis(mapPrototype.set);$h‍_once.mapSet(mapSet);const mapGet=uncurryThis(mapPrototype.get);$h‍_once.mapGet(mapGet);const mapHas=uncurryThis(mapPrototype.has);$h‍_once.mapHas(mapHas);const mapDelete=uncurryThis(mapPrototype.delete);$h‍_once.mapDelete(mapDelete);const mapEntries=uncurryThis(mapPrototype.entries);$h‍_once.mapEntries(mapEntries);const iterateMap=uncurryThis(mapPrototype[iteratorSymbol]);$h‍_once.iterateMap(iterateMap);const setAdd=uncurryThis(setPrototype.add);$h‍_once.setAdd(setAdd);const setDelete=uncurryThis(setPrototype.delete);$h‍_once.setDelete(setDelete);const setForEach=uncurryThis(setPrototype.forEach);$h‍_once.setForEach(setForEach);const setHas=uncurryThis(setPrototype.has);$h‍_once.setHas(setHas);const iterateSet=uncurryThis(setPrototype[iteratorSymbol]);$h‍_once.iterateSet(iterateSet);const regexpTest=uncurryThis(regexpPrototype.test);$h‍_once.regexpTest(regexpTest);const regexpExec=uncurryThis(regexpPrototype.exec);$h‍_once.regexpExec(regexpExec);const matchAllRegExp=uncurryThis(regexpPrototype[matchAllSymbol]);$h‍_once.matchAllRegExp(matchAllRegExp);const stringEndsWith=uncurryThis(stringPrototype.endsWith);$h‍_once.stringEndsWith(stringEndsWith);const stringIncludes=uncurryThis(stringPrototype.includes);$h‍_once.stringIncludes(stringIncludes);const stringIndexOf=uncurryThis(stringPrototype.indexOf);$h‍_once.stringIndexOf(stringIndexOf);const stringMatch=uncurryThis(stringPrototype.match);$h‍_once.stringMatch(stringMatch);const stringReplace=uncurryThis(stringPrototype.replace);$h‍_once.stringReplace(stringReplace);const stringSearch=uncurryThis(stringPrototype.search);$h‍_once.stringSearch(stringSearch);const stringSlice=uncurryThis(stringPrototype.slice);$h‍_once.stringSlice(stringSlice);const stringSplit=uncurryThis(stringPrototype.split);$h‍_once.stringSplit(stringSplit);const stringStartsWith=uncurryThis(stringPrototype.startsWith);$h‍_once.stringStartsWith(stringStartsWith);const iterateString=uncurryThis(stringPrototype[iteratorSymbol]);$h‍_once.iterateString(iterateString);const weakmapDelete=uncurryThis(weakmapPrototype.delete);$h‍_once.weakmapDelete(weakmapDelete);const weakmapGet=uncurryThis(weakmapPrototype.get);$h‍_once.weakmapGet(weakmapGet);const weakmapHas=uncurryThis(weakmapPrototype.has);$h‍_once.weakmapHas(weakmapHas);const weakmapSet=uncurryThis(weakmapPrototype.set);$h‍_once.weakmapSet(weakmapSet);const weaksetAdd=uncurryThis(weaksetPrototype.add);$h‍_once.weaksetAdd(weaksetAdd);const weaksetHas=uncurryThis(weaksetPrototype.has);$h‍_once.weaksetHas(weaksetHas);const functionToString=uncurryThis(functionPrototype.toString);$h‍_once.functionToString(functionToString);const{all:all}=Promise;$h‍_once.promiseAll((promises=>apply(all,Promise,[promises])));const promiseCatch=uncurryThis(promisePrototype.catch);$h‍_once.promiseCatch(promiseCatch);const promiseThen=uncurryThis(promisePrototype.then);$h‍_once.promiseThen(promiseThen);const finalizationRegistryRegister=FinalizationRegistry&&uncurryThis(FinalizationRegistry.prototype.register);$h‍_once.finalizationRegistryRegister(finalizationRegistryRegister);const finalizationRegistryUnregister=FinalizationRegistry&&uncurryThis(FinalizationRegistry.prototype.unregister);$h‍_once.finalizationRegistryUnregister(finalizationRegistryUnregister);$h‍_once.getConstructorOf((fn=>reflectGet(getPrototypeOf(fn),"constructor")));const immutableObject=freeze(create(null));$h‍_once.immutableObject(immutableObject);$h‍_once.isObject((value=>Object(value)===value));$h‍_once.isError((value=>value instanceof FERAL_ERROR));const FERAL_EVAL=eval;$h‍_once.FERAL_EVAL(FERAL_EVAL);const FERAL_FUNCTION=Function;$h‍_once.FERAL_FUNCTION(FERAL_FUNCTION);$h‍_once.noEvalEvaluate((()=>{throw TypeError('Cannot eval with evalTaming set to "noEval" (SES_NO_EVAL)')}))},({imports:$h‍_imports,liveVar:$h‍_live,onceVar:$h‍_once,importMeta:$h‍____meta})=>{let TypeError;if($h‍_imports([["./commons.js",[["TypeError",[$h‍_a=>TypeError=$h‍_a]]]]]),function(){return this}())throw TypeError("SES failed to initialize, sloppy mode (SES_NO_SLOPPY)")},({imports:$h‍_imports,liveVar:$h‍_live,onceVar:$h‍_once,importMeta:$h‍____meta})=>{$h‍_imports([]);const{freeze:freeze}=Object,{apply:apply}=Reflect,arrayPush=(fn=Array.prototype.push,(receiver,...args)=>apply(fn,receiver,args));var fn;const q=JSON.stringify,Fail=(literals,...args)=>{let msg=literals[0];for(let i=0;i<args.length;i+=1)msg=`${msg}${args[i]}${literals[i+1]}`;throw Error(msg)},makeEnvironmentCaptor=aGlobal=>{const capturedEnvironmentOptionNames=[],getEnvironmentOption=(optionName,defaultSetting)=>{"string"==typeof optionName||Fail`Environment option name ${q(optionName)} must be a string.`,"string"==typeof defaultSetting||Fail`Environment option default setting ${q(defaultSetting)} must be a string.`;let setting=defaultSetting;const globalProcess=aGlobal.process;if(globalProcess&&"object"==typeof globalProcess){const globalEnv=globalProcess.env;if(globalEnv&&"object"==typeof globalEnv&&optionName in globalEnv){arrayPush(capturedEnvironmentOptionNames,optionName);const optionValue=globalEnv[optionName];"string"==typeof optionValue||Fail`Environment option named ${q(optionName)}, if present, must have a corresponding string value, got ${q(optionValue)}`,setting=optionValue}}return setting};freeze(getEnvironmentOption);const getCapturedEnvironmentOptionNames=()=>freeze([...capturedEnvironmentOptionNames]);return freeze(getCapturedEnvironmentOptionNames),freeze({getEnvironmentOption:getEnvironmentOption,getCapturedEnvironmentOptionNames:getCapturedEnvironmentOptionNames})};$h‍_once.makeEnvironmentCaptor(makeEnvironmentCaptor),freeze(makeEnvironmentCaptor)},({imports:$h‍_imports,liveVar:$h‍_live,onceVar:$h‍_once,importMeta:$h‍____meta})=>{$h‍_imports([["./src/env-options.js",[]]])},({imports:$h‍_imports,liveVar:$h‍_live,onceVar:$h‍_once,importMeta:$h‍____meta})=>{let Set,String,isArray,arrayJoin,arraySlice,arraySort,arrayMap,keys,fromEntries,freeze,is,isError,setAdd,setHas,stringIncludes,stringStartsWith,stringifyJson,toStringTagSymbol;$h‍_imports([["../commons.js",[["Set",[$h‍_a=>Set=$h‍_a]],["String",[$h‍_a=>String=$h‍_a]],["isArray",[$h‍_a=>isArray=$h‍_a]],["arrayJoin",[$h‍_a=>arrayJoin=$h‍_a]],["arraySlice",[$h‍_a=>arraySlice=$h‍_a]],["arraySort",[$h‍_a=>arraySort=$h‍_a]],["arrayMap",[$h‍_a=>arrayMap=$h‍_a]],["keys",[$h‍_a=>keys=$h‍_a]],["fromEntries",[$h‍_a=>fromEntries=$h‍_a]],["freeze",[$h‍_a=>freeze=$h‍_a]],["is",[$h‍_a=>is=$h‍_a]],["isError",[$h‍_a=>isError=$h‍_a]],["setAdd",[$h‍_a=>setAdd=$h‍_a]],["setHas",[$h‍_a=>setHas=$h‍_a]],["stringIncludes",[$h‍_a=>stringIncludes=$h‍_a]],["stringStartsWith",[$h‍_a=>stringStartsWith=$h‍_a]],["stringifyJson",[$h‍_a=>stringifyJson=$h‍_a]],["toStringTagSymbol",[$h‍_a=>toStringTagSymbol=$h‍_a]]]]]);$h‍_once.enJoin(((terms,conjunction)=>{if(0===terms.length)return"(none)";if(1===terms.length)return terms[0];if(2===terms.length){const[first,second]=terms;return`${first} ${conjunction} ${second}`}return`${arrayJoin(arraySlice(terms,0,-1),", ")}, ${conjunction} ${terms[terms.length-1]}`}));const an=str=>(str=`${str}`).length>=1&&stringIncludes("aeiouAEIOU",str[0])?`an ${str}`:`a ${str}`;$h‍_once.an(an),freeze(an);const bestEffortStringify=(payload,spaces=undefined)=>{const seenSet=new Set,replacer=(_,val)=>{switch(typeof val){case"object":{if(null===val)return null;if(setHas(seenSet,val))return"[Seen]";if(setAdd(seenSet,val),isError(val))return`[${val.name}: ${val.message}]`;if(toStringTagSymbol in val)return`[${val[toStringTagSymbol]}]`;if(isArray(val))return val;const names=keys(val);if(names.length<2)return val;let sorted=!0;for(let i=1;i<names.length;i+=1)if(names[i-1]>=names[i]){sorted=!1;break}if(sorted)return val;arraySort(names);const entries=arrayMap(names,(name=>[name,val[name]]));return fromEntries(entries)}case"function":return`[Function ${val.name||"<anon>"}]`;case"string":return stringStartsWith(val,"[")?`[${val}]`:val;case"undefined":case"symbol":return`[${String(val)}]`;case"bigint":return`[${val}n]`;case"number":return is(val,NaN)?"[NaN]":val===1/0?"[Infinity]":val===-1/0?"[-Infinity]":val;default:return val}};try{return stringifyJson(payload,replacer,spaces)}catch(_err){return"[Something that failed to stringify]"}};$h‍_once.bestEffortStringify(bestEffortStringify),freeze(bestEffortStringify)},({imports:$h‍_imports,liveVar:$h‍_live,onceVar:$h‍_once,importMeta:$h‍____meta})=>{$h‍_imports([])},({imports:$h‍_imports,liveVar:$h‍_live,onceVar:$h‍_once,importMeta:$h‍____meta})=>{$h‍_imports([])},({imports:$h‍_imports,liveVar:$h‍_live,onceVar:$h‍_once,importMeta:$h‍____meta})=>{$h‍_imports([["./internal-types.js",[]]]);const{freeze:freeze}=Object,{isSafeInteger:isSafeInteger}=Number,makeSelfCell=data=>{const selfCell={next:void 0,prev:void 0,data:data};return selfCell.next=selfCell,selfCell.prev=selfCell,selfCell},spliceAfter=(prev,selfCell)=>{if(prev===selfCell)throw TypeError("Cannot splice a cell into itself");if(selfCell.next!==selfCell||selfCell.prev!==selfCell)throw TypeError("Expected self-linked cell");const cell=selfCell,next=prev.next;return cell.prev=prev,cell.next=next,prev.next=cell,next.prev=cell,cell},spliceOut=cell=>{const{prev:prev,next:next}=cell;prev.next=next,next.prev=prev,cell.prev=cell,cell.next=cell},makeLRUCacheMap=keysBudget=>{if(!isSafeInteger(keysBudget)||keysBudget<0)throw TypeError("keysBudget must be a safe non-negative integer number");const keyToCell=new WeakMap;let size=0;const head=makeSelfCell(void 0),touchCell=key=>{const cell=keyToCell.get(key);if(void 0!==cell&&void 0!==cell.data)return spliceOut(cell),spliceAfter(head,cell),cell},has=key=>void 0!==touchCell(key);freeze(has);const get=key=>{const cell=touchCell(key);return cell&&cell.data&&cell.data.get(key)};freeze(get);const set=(key,value)=>{if(keysBudget<1)return lruCacheMap;let cell=touchCell(key);if(void 0===cell&&(cell=makeSelfCell(void 0),spliceAfter(head,cell)),!cell.data)for(size+=1,cell.data=new WeakMap,keyToCell.set(key,cell);size>keysBudget;){const condemned=head.prev;spliceOut(condemned),condemned.data=void 0,size-=1}return cell.data.set(key,value),lruCacheMap};freeze(set);const deleteIt=key=>{const cell=keyToCell.get(key);return void 0!==cell&&(spliceOut(cell),keyToCell.delete(key),void 0!==cell.data&&(cell.data=void 0,size-=1,!0))};freeze(deleteIt);const lruCacheMap=freeze({has:has,get:get,set:set,delete:deleteIt,[Symbol.toStringTag]:"LRUCacheMap"});return lruCacheMap};$h‍_once.makeLRUCacheMap(makeLRUCacheMap),freeze(makeLRUCacheMap);const makeNoteLogArgsArrayKit=(errorsBudget=1e3,argsPerErrorBudget=100)=>{if(!isSafeInteger(argsPerErrorBudget)||argsPerErrorBudget<1)throw TypeError("argsPerErrorBudget must be a safe positive integer number");const noteLogArgsArrayMap=makeLRUCacheMap(errorsBudget),addLogArgs=(error,logArgs)=>{const logArgsArray=noteLogArgsArrayMap.get(error);void 0!==logArgsArray?(logArgsArray.length>=argsPerErrorBudget&&logArgsArray.shift(),logArgsArray.push(logArgs)):noteLogArgsArrayMap.set(error,[logArgs])};freeze(addLogArgs);const takeLogArgsArray=error=>{const result=noteLogArgsArrayMap.get(error);return noteLogArgsArrayMap.delete(error),result};return freeze(takeLogArgsArray),freeze({addLogArgs:addLogArgs,takeLogArgsArray:takeLogArgsArray})};$h‍_once.makeNoteLogArgsArrayKit(makeNoteLogArgsArrayKit),freeze(makeNoteLogArgsArrayKit)},({imports:$h‍_imports,liveVar:$h‍_live,onceVar:$h‍_once,importMeta:$h‍____meta})=>{let RangeError,TypeError,WeakMap,arrayJoin,arrayMap,arrayPop,arrayPush,assign,freeze,globalThis,is,isError,regexpTest,stringIndexOf,stringReplace,stringSlice,stringStartsWith,weakmapDelete,weakmapGet,weakmapHas,weakmapSet,an,bestEffortStringify,makeNoteLogArgsArrayKit;$h‍_imports([["../commons.js",[["RangeError",[$h‍_a=>RangeError=$h‍_a]],["TypeError",[$h‍_a=>TypeError=$h‍_a]],["WeakMap",[$h‍_a=>WeakMap=$h‍_a]],["arrayJoin",[$h‍_a=>arrayJoin=$h‍_a]],["arrayMap",[$h‍_a=>arrayMap=$h‍_a]],["arrayPop",[$h‍_a=>arrayPop=$h‍_a]],["arrayPush",[$h‍_a=>arrayPush=$h‍_a]],["assign",[$h‍_a=>assign=$h‍_a]],["freeze",[$h‍_a=>freeze=$h‍_a]],["globalThis",[$h‍_a=>globalThis=$h‍_a]],["is",[$h‍_a=>is=$h‍_a]],["isError",[$h‍_a=>isError=$h‍_a]],["regexpTest",[$h‍_a=>regexpTest=$h‍_a]],["stringIndexOf",[$h‍_a=>stringIndexOf=$h‍_a]],["stringReplace",[$h‍_a=>stringReplace=$h‍_a]],["stringSlice",[$h‍_a=>stringSlice=$h‍_a]],["stringStartsWith",[$h‍_a=>stringStartsWith=$h‍_a]],["weakmapDelete",[$h‍_a=>weakmapDelete=$h‍_a]],["weakmapGet",[$h‍_a=>weakmapGet=$h‍_a]],["weakmapHas",[$h‍_a=>weakmapHas=$h‍_a]],["weakmapSet",[$h‍_a=>weakmapSet=$h‍_a]]]],["./stringify-utils.js",[["an",[$h‍_a=>an=$h‍_a]],["bestEffortStringify",[$h‍_a=>bestEffortStringify=$h‍_a]]]],["./types.js",[]],["./internal-types.js",[]],["./note-log-args.js",[["makeNoteLogArgsArrayKit",[$h‍_a=>makeNoteLogArgsArrayKit=$h‍_a]]]]]);const declassifiers=new WeakMap,quote=(payload,spaces=undefined)=>{const result=freeze({toString:freeze((()=>bestEffortStringify(payload,spaces)))});return weakmapSet(declassifiers,result,payload),result};freeze(quote);const canBeBare=freeze(/^[\w:-]( ?[\w:-])*$/),bare=(payload,spaces=undefined)=>{if("string"!=typeof payload||!regexpTest(canBeBare,payload))return quote(payload,spaces);const result=freeze({toString:freeze((()=>payload))});return weakmapSet(declassifiers,result,payload),result};freeze(bare);const hiddenDetailsMap=new WeakMap,getMessageString=({template:template,args:args})=>{const parts=[template[0]];for(let i=0;i<args.length;i+=1){const arg=args[i];let argStr;argStr=weakmapHas(declassifiers,arg)?`${arg}`:isError(arg)?`(${an(arg.name)})`:`(${an(typeof arg)})`,arrayPush(parts,argStr,template[i+1])}return arrayJoin(parts,"")},DetailsTokenProto=freeze({toString(){const hiddenDetails=weakmapGet(hiddenDetailsMap,this);return void 0===hiddenDetails?"[Not a DetailsToken]":getMessageString(hiddenDetails)}});freeze(DetailsTokenProto.toString);const redactedDetails=(template,...args)=>{const detailsToken=freeze({__proto__:DetailsTokenProto});return weakmapSet(hiddenDetailsMap,detailsToken,{template:template,args:args}),detailsToken};freeze(redactedDetails);const unredactedDetails=(template,...args)=>(args=arrayMap(args,(arg=>weakmapHas(declassifiers,arg)?arg:quote(arg))),redactedDetails(template,...args));$h‍_once.unredactedDetails(unredactedDetails),freeze(unredactedDetails);const getLogArgs=({template:template,args:args})=>{const logArgs=[template[0]];for(let i=0;i<args.length;i+=1){let arg=args[i];weakmapHas(declassifiers,arg)&&(arg=weakmapGet(declassifiers,arg));const priorWithoutSpace=stringReplace(arrayPop(logArgs)||"",/ $/,"");""!==priorWithoutSpace&&arrayPush(logArgs,priorWithoutSpace);const nextWithoutSpace=stringReplace(template[i+1],/^ /,"");arrayPush(logArgs,arg,nextWithoutSpace)}return""===logArgs[logArgs.length-1]&&arrayPop(logArgs),logArgs},hiddenMessageLogArgs=new WeakMap;let errorTagNum=0;const errorTags=new WeakMap,tagError=(err,optErrorName=err.name)=>{let errorTag=weakmapGet(errorTags,err);return void 0!==errorTag||(errorTagNum+=1,errorTag=`${optErrorName}#${errorTagNum}`,weakmapSet(errorTags,err,errorTag)),errorTag},makeError=(optDetails=redactedDetails`Assert failed`,ErrorConstructor=globalThis.Error,{errorName:errorName}={})=>{"string"==typeof optDetails&&(optDetails=redactedDetails([optDetails]));const hiddenDetails=weakmapGet(hiddenDetailsMap,optDetails);if(void 0===hiddenDetails)throw TypeError(`unrecognized details ${quote(optDetails)}`);const error=new ErrorConstructor(getMessageString(hiddenDetails));return weakmapSet(hiddenMessageLogArgs,error,getLogArgs(hiddenDetails)),void 0!==errorName&&tagError(error,errorName),error};freeze(makeError);const{addLogArgs:addLogArgs,takeLogArgsArray:takeLogArgsArray}=makeNoteLogArgsArrayKit(),hiddenNoteCallbackArrays=new WeakMap,note=(error,detailsNote)=>{"string"==typeof detailsNote&&(detailsNote=redactedDetails([detailsNote]));const hiddenDetails=weakmapGet(hiddenDetailsMap,detailsNote);if(void 0===hiddenDetails)throw TypeError(`unrecognized details ${quote(detailsNote)}`);const logArgs=getLogArgs(hiddenDetails),callbacks=weakmapGet(hiddenNoteCallbackArrays,error);if(void 0!==callbacks)for(const callback of callbacks)callback(error,logArgs);else addLogArgs(error,logArgs)};freeze(note);const loggedErrorHandler={getStackString:globalThis.getStackString||(error=>{if(!("stack"in error))return"";const stackString=`${error.stack}`,pos=stringIndexOf(stackString,"\n");return stringStartsWith(stackString," ")||-1===pos?stackString:stringSlice(stackString,pos+1)}),tagError:error=>tagError(error),resetErrorTagNum:()=>{errorTagNum=0},getMessageLogArgs:error=>weakmapGet(hiddenMessageLogArgs,error),takeMessageLogArgs:error=>{const result=weakmapGet(hiddenMessageLogArgs,error);return weakmapDelete(hiddenMessageLogArgs,error),result},takeNoteLogArgsArray:(error,callback)=>{const result=takeLogArgsArray(error);if(void 0!==callback){const callbacks=weakmapGet(hiddenNoteCallbackArrays,error);callbacks?arrayPush(callbacks,callback):weakmapSet(hiddenNoteCallbackArrays,error,[callback])}return result||[]}};$h‍_once.loggedErrorHandler(loggedErrorHandler),freeze(loggedErrorHandler);const makeAssert=(optRaise=undefined,unredacted=!1)=>{const details=unredacted?unredactedDetails:redactedDetails,assertFailedDetails=details`Check failed`,fail=(optDetails=assertFailedDetails,ErrorConstructor=globalThis.Error)=>{const reason=makeError(optDetails,ErrorConstructor);throw void 0!==optRaise&&optRaise(reason),reason};freeze(fail);const Fail=(template,...args)=>fail(details(template,...args));const equal=(actual,expected,optDetails=undefined,ErrorConstructor=undefined)=>{is(actual,expected)||fail(optDetails||details`Expected ${actual} is same as ${expected}`,ErrorConstructor||RangeError)};freeze(equal);const assertTypeof=(specimen,typename,optDetails)=>{if(typeof specimen!==typename){if("string"==typeof typename||Fail`${quote(typename)} must be a string`,void 0===optDetails){const typeWithDeterminer=an(typename);optDetails=details`${specimen} must be ${bare(typeWithDeterminer)}`}fail(optDetails,TypeError)}};freeze(assertTypeof);const assert=assign((function(flag,optDetails=undefined,ErrorConstructor=undefined){flag||fail(optDetails,ErrorConstructor)}),{error:makeError,fail:fail,equal:equal,typeof:assertTypeof,string:(specimen,optDetails=undefined)=>assertTypeof(specimen,"string",optDetails),note:note,details:details,Fail:Fail,quote:quote,bare:bare,makeAssert:makeAssert});return freeze(assert)};$h‍_once.makeAssert(makeAssert),freeze(makeAssert);const assert=makeAssert();$h‍_once.assert(assert)},({imports:$h‍_imports,liveVar:$h‍_live,onceVar:$h‍_once,importMeta:$h‍____meta})=>{let Set,String,TypeError,WeakMap,WeakSet,globalThis,apply,arrayForEach,defineProperty,freeze,getOwnPropertyDescriptor,getOwnPropertyDescriptors,getPrototypeOf,isInteger,isObject,objectHasOwnProperty,ownKeys,preventExtensions,setAdd,setForEach,setHas,toStringTagSymbol,typedArrayPrototype,weakmapGet,weakmapSet,weaksetAdd,weaksetHas,assert;$h‍_imports([["./commons.js",[["Set",[$h‍_a=>Set=$h‍_a]],["String",[$h‍_a=>String=$h‍_a]],["TypeError",[$h‍_a=>TypeError=$h‍_a]],["WeakMap",[$h‍_a=>WeakMap=$h‍_a]],["WeakSet",[$h‍_a=>WeakSet=$h‍_a]],["globalThis",[$h‍_a=>globalThis=$h‍_a]],["apply",[$h‍_a=>apply=$h‍_a]],["arrayForEach",[$h‍_a=>arrayForEach=$h‍_a]],["defineProperty",[$h‍_a=>defineProperty=$h‍_a]],["freeze",[$h‍_a=>freeze=$h‍_a]],["getOwnPropertyDescriptor",[$h‍_a=>getOwnPropertyDescriptor=$h‍_a]],["getOwnPropertyDescriptors",[$h‍_a=>getOwnPropertyDescriptors=$h‍_a]],["getPrototypeOf",[$h‍_a=>getPrototypeOf=$h‍_a]],["isInteger",[$h‍_a=>isInteger=$h‍_a]],["isObject",[$h‍_a=>isObject=$h‍_a]],["objectHasOwnProperty",[$h‍_a=>objectHasOwnProperty=$h‍_a]],["ownKeys",[$h‍_a=>ownKeys=$h‍_a]],["preventExtensions",[$h‍_a=>preventExtensions=$h‍_a]],["setAdd",[$h‍_a=>setAdd=$h‍_a]],["setForEach",[$h‍_a=>setForEach=$h‍_a]],["setHas",[$h‍_a=>setHas=$h‍_a]],["toStringTagSymbol",[$h‍_a=>toStringTagSymbol=$h‍_a]],["typedArrayPrototype",[$h‍_a=>typedArrayPrototype=$h‍_a]],["weakmapGet",[$h‍_a=>weakmapGet=$h‍_a]],["weakmapSet",[$h‍_a=>weakmapSet=$h‍_a]],["weaksetAdd",[$h‍_a=>weaksetAdd=$h‍_a]],["weaksetHas",[$h‍_a=>weaksetHas=$h‍_a]]]],["./error/assert.js",[["assert",[$h‍_a=>assert=$h‍_a]]]]]);const typedArrayToStringTag=getOwnPropertyDescriptor(typedArrayPrototype,toStringTagSymbol);assert(typedArrayToStringTag);const getTypedArrayToStringTag=typedArrayToStringTag.get;assert(getTypedArrayToStringTag);const isTypedArray=object=>void 0!==apply(getTypedArrayToStringTag,object,[]);$h‍_once.isTypedArray(isTypedArray);const freezeTypedArray=array=>{preventExtensions(array),arrayForEach(ownKeys(array),(name=>{const desc=getOwnPropertyDescriptor(array,name);assert(desc),(propertyKey=>{const n=+String(propertyKey);return isInteger(n)&&String(n)===propertyKey})(name)||defineProperty(array,name,{...desc,writable:!1,configurable:!1})}))};$h‍_once.makeHardener((()=>{if("function"==typeof globalThis.harden){return globalThis.harden}const hardened=new WeakSet,{harden:harden}={harden(root){const toFreeze=new Set,paths=new WeakMap;function enqueue(val,path=undefined){if(!isObject(val))return;const type=typeof val;if("object"!==type&&"function"!==type)throw TypeError(`Unexpected typeof: ${type}`);weaksetHas(hardened,val)||setHas(toFreeze,val)||(setAdd(toFreeze,val),weakmapSet(paths,val,path))}function freezeAndTraverse(obj){isTypedArray(obj)?freezeTypedArray(obj):freeze(obj);const path=weakmapGet(paths,obj)||"unknown",descs=getOwnPropertyDescriptors(obj);enqueue(getPrototypeOf(obj),`${path}.__proto__`),arrayForEach(ownKeys(descs),(name=>{const pathname=`${path}.${String(name)}`,desc=descs[name];objectHasOwnProperty(desc,"value")?enqueue(desc.value,`${pathname}`):(enqueue(desc.get,`${pathname}(get)`),enqueue(desc.set,`${pathname}(set)`))}))}function markHardened(value){weaksetAdd(hardened,value)}return enqueue(root),setForEach(toFreeze,freezeAndTraverse),setForEach(toFreeze,markHardened),root}};return harden}))},({imports:$h‍_imports,liveVar:$h‍_live,onceVar:$h‍_once,importMeta:$h‍____meta})=>{$h‍_imports([]);const constantProperties={Infinity:1/0,NaN:NaN,undefined:void 0};$h‍_once.constantProperties(constantProperties);$h‍_once.universalPropertyNames({isFinite:"isFinite",isNaN:"isNaN",parseFloat:"parseFloat",parseInt:"parseInt",decodeURI:"decodeURI",decodeURIComponent:"decodeURIComponent",encodeURI:"encodeURI",encodeURIComponent:"encodeURIComponent",Array:"Array",ArrayBuffer:"ArrayBuffer",BigInt:"BigInt",BigInt64Array:"BigInt64Array",BigUint64Array:"BigUint64Array",Boolean:"Boolean",DataView:"DataView",EvalError:"EvalError",Float32Array:"Float32Array",Float64Array:"Float64Array",Int8Array:"Int8Array",Int16Array:"Int16Array",Int32Array:"Int32Array",Map:"Map",Number:"Number",Object:"Object",Promise:"Promise",Proxy:"Proxy",RangeError:"RangeError",ReferenceError:"ReferenceError",Set:"Set",String:"String",SyntaxError:"SyntaxError",TypeError:"TypeError",Uint8Array:"Uint8Array",Uint8ClampedArray:"Uint8ClampedArray",Uint16Array:"Uint16Array",Uint32Array:"Uint32Array",URIError:"URIError",WeakMap:"WeakMap",WeakSet:"WeakSet",Iterator:"Iterator",AsyncIterator:"AsyncIterator",JSON:"JSON",Reflect:"Reflect",escape:"escape",unescape:"unescape",lockdown:"lockdown",harden:"harden",HandledPromise:"HandledPromise"});$h‍_once.initialGlobalPropertyNames({Date:"%InitialDate%",Error:"%InitialError%",RegExp:"%InitialRegExp%",Math:"%InitialMath%",getStackString:"%InitialGetStackString%"});$h‍_once.sharedGlobalPropertyNames({Date:"%SharedDate%",Error:"%SharedError%",RegExp:"%SharedRegExp%",Symbol:"%SharedSymbol%",Math:"%SharedMath%"});$h‍_once.uniqueGlobalPropertyNames({globalThis:"%UniqueGlobalThis%",eval:"%UniqueEval%",Function:"%UniqueFunction%",Compartment:"%UniqueCompartment%"});const NativeErrors=[EvalError,RangeError,ReferenceError,SyntaxError,TypeError,URIError];$h‍_once.NativeErrors(NativeErrors);const FunctionInstance={"[[Proto]]":"%FunctionPrototype%",length:"number",name:"string"};$h‍_once.FunctionInstance(FunctionInstance);const AsyncFunctionInstance={"[[Proto]]":"%AsyncFunctionPrototype%"};$h‍_once.AsyncFunctionInstance(AsyncFunctionInstance);const fn=FunctionInstance,asyncFn=AsyncFunctionInstance,getter={get:fn,set:"undefined"},accessor={get:fn,set:fn};function NativeError(prototype){return{"[[Proto]]":"%SharedError%",prototype:prototype}}function NativeErrorPrototype(constructor){return{"[[Proto]]":"%ErrorPrototype%",constructor:constructor,message:"string",name:"string",toString:!1,cause:!1}}function TypedArray(prototype){return{"[[Proto]]":"%TypedArray%",BYTES_PER_ELEMENT:"number",prototype:prototype}}function TypedArrayPrototype(constructor){return{"[[Proto]]":"%TypedArrayPrototype%",BYTES_PER_ELEMENT:"number",constructor:constructor}}$h‍_once.isAccessorPermit((permit=>permit===getter||permit===accessor));const CommonMath={E:"number",LN10:"number",LN2:"number",LOG10E:"number",LOG2E:"number",PI:"number",SQRT1_2:"number",SQRT2:"number","@@toStringTag":"string",abs:fn,acos:fn,acosh:fn,asin:fn,asinh:fn,atan:fn,atanh:fn,atan2:fn,cbrt:fn,ceil:fn,clz32:fn,cos:fn,cosh:fn,exp:fn,expm1:fn,floor:fn,fround:fn,hypot:fn,imul:fn,log:fn,log1p:fn,log10:fn,log2:fn,max:fn,min:fn,pow:fn,round:fn,sign:fn,sin:fn,sinh:fn,sqrt:fn,tan:fn,tanh:fn,trunc:fn,idiv:!1,idivmod:!1,imod:!1,imuldiv:!1,irem:!1,mod:!1},permitted={"[[Proto]]":null,"%ThrowTypeError%":fn,Infinity:"number",NaN:"number",undefined:"undefined","%UniqueEval%":fn,isFinite:fn,isNaN:fn,parseFloat:fn,parseInt:fn,decodeURI:fn,decodeURIComponent:fn,encodeURI:fn,encodeURIComponent:fn,Object:{"[[Proto]]":"%FunctionPrototype%",assign:fn,create:fn,defineProperties:fn,defineProperty:fn,entries:fn,freeze:fn,fromEntries:fn,getOwnPropertyDescriptor:fn,getOwnPropertyDescriptors:fn,getOwnPropertyNames:fn,getOwnPropertySymbols:fn,getPrototypeOf:fn,hasOwn:fn,is:fn,isExtensible:fn,isFrozen:fn,isSealed:fn,keys:fn,preventExtensions:fn,prototype:"%ObjectPrototype%",seal:fn,setPrototypeOf:fn,values:fn,groupBy:fn},"%ObjectPrototype%":{"[[Proto]]":null,constructor:"Object",hasOwnProperty:fn,isPrototypeOf:fn,propertyIsEnumerable:fn,toLocaleString:fn,toString:fn,valueOf:fn,"--proto--":accessor,__defineGetter__:fn,__defineSetter__:fn,__lookupGetter__:fn,__lookupSetter__:fn},"%UniqueFunction%":{"[[Proto]]":"%FunctionPrototype%",prototype:"%FunctionPrototype%"},"%InertFunction%":{"[[Proto]]":"%FunctionPrototype%",prototype:"%FunctionPrototype%"},"%FunctionPrototype%":{apply:fn,bind:fn,call:fn,constructor:"%InertFunction%",toString:fn,"@@hasInstance":fn,caller:!1,arguments:!1},Boolean:{"[[Proto]]":"%FunctionPrototype%",prototype:"%BooleanPrototype%"},"%BooleanPrototype%":{constructor:"Boolean",toString:fn,valueOf:fn},"%SharedSymbol%":{"[[Proto]]":"%FunctionPrototype%",asyncDispose:"symbol",asyncIterator:"symbol",dispose:"symbol",for:fn,hasInstance:"symbol",isConcatSpreadable:"symbol",iterator:"symbol",keyFor:fn,match:"symbol",matchAll:"symbol",prototype:"%SymbolPrototype%",replace:"symbol",search:"symbol",species:"symbol",split:"symbol",toPrimitive:"symbol",toStringTag:"symbol",unscopables:"symbol",useSimple:!1,useSetter:!1},"%SymbolPrototype%":{constructor:"%SharedSymbol%",description:getter,toString:fn,valueOf:fn,"@@toPrimitive":fn,"@@toStringTag":"string"},"%InitialError%":{"[[Proto]]":"%FunctionPrototype%",prototype:"%ErrorPrototype%",captureStackTrace:fn,stackTraceLimit:accessor,prepareStackTrace:accessor},"%SharedError%":{"[[Proto]]":"%FunctionPrototype%",prototype:"%ErrorPrototype%",captureStackTrace:fn,stackTraceLimit:accessor,prepareStackTrace:accessor},"%ErrorPrototype%":{constructor:"%SharedError%",message:"string",name:"string",toString:fn,at:!1,stack:accessor,cause:!1},EvalError:NativeError("%EvalErrorPrototype%"),RangeError:NativeError("%RangeErrorPrototype%"),ReferenceError:NativeError("%ReferenceErrorPrototype%"),SyntaxError:NativeError("%SyntaxErrorPrototype%"),TypeError:NativeError("%TypeErrorPrototype%"),URIError:NativeError("%URIErrorPrototype%"),"%EvalErrorPrototype%":NativeErrorPrototype("EvalError"),"%RangeErrorPrototype%":NativeErrorPrototype("RangeError"),"%ReferenceErrorPrototype%":NativeErrorPrototype("ReferenceError"),"%SyntaxErrorPrototype%":NativeErrorPrototype("SyntaxError"),"%TypeErrorPrototype%":NativeErrorPrototype("TypeError"),"%URIErrorPrototype%":NativeErrorPrototype("URIError"),Number:{"[[Proto]]":"%FunctionPrototype%",EPSILON:"number",isFinite:fn,isInteger:fn,isNaN:fn,isSafeInteger:fn,MAX_SAFE_INTEGER:"number",MAX_VALUE:"number",MIN_SAFE_INTEGER:"number",MIN_VALUE:"number",NaN:"number",NEGATIVE_INFINITY:"number",parseFloat:fn,parseInt:fn,POSITIVE_INFINITY:"number",prototype:"%NumberPrototype%"},"%NumberPrototype%":{constructor:"Number",toExponential:fn,toFixed:fn,toLocaleString:fn,toPrecision:fn,toString:fn,valueOf:fn},BigInt:{"[[Proto]]":"%FunctionPrototype%",asIntN:fn,asUintN:fn,prototype:"%BigIntPrototype%",bitLength:!1,fromArrayBuffer:!1},"%BigIntPrototype%":{constructor:"BigInt",toLocaleString:fn,toString:fn,valueOf:fn,"@@toStringTag":"string"},"%InitialMath%":{...CommonMath,random:fn},"%SharedMath%":{...CommonMath,random:fn},"%InitialDate%":{"[[Proto]]":"%FunctionPrototype%",now:fn,parse:fn,prototype:"%DatePrototype%",UTC:fn},"%SharedDate%":{"[[Proto]]":"%FunctionPrototype%",now:fn,parse:fn,prototype:"%DatePrototype%",UTC:fn},"%DatePrototype%":{constructor:"%SharedDate%",getDate:fn,getDay:fn,getFullYear:fn,getHours:fn,getMilliseconds:fn,getMinutes:fn,getMonth:fn,getSeconds:fn,getTime:fn,getTimezoneOffset:fn,getUTCDate:fn,getUTCDay:fn,getUTCFullYear:fn,getUTCHours:fn,getUTCMilliseconds:fn,getUTCMinutes:fn,getUTCMonth:fn,getUTCSeconds:fn,setDate:fn,setFullYear:fn,setHours:fn,setMilliseconds:fn,setMinutes:fn,setMonth:fn,setSeconds:fn,setTime:fn,setUTCDate:fn,setUTCFullYear:fn,setUTCHours:fn,setUTCMilliseconds:fn,setUTCMinutes:fn,setUTCMonth:fn,setUTCSeconds:fn,toDateString:fn,toISOString:fn,toJSON:fn,toLocaleDateString:fn,toLocaleString:fn,toLocaleTimeString:fn,toString:fn,toTimeString:fn,toUTCString:fn,valueOf:fn,"@@toPrimitive":fn,getYear:fn,setYear:fn,toGMTString:fn},String:{"[[Proto]]":"%FunctionPrototype%",fromCharCode:fn,fromCodePoint:fn,prototype:"%StringPrototype%",raw:fn,fromArrayBuffer:!1},"%StringPrototype%":{length:"number",at:fn,charAt:fn,charCodeAt:fn,codePointAt:fn,concat:fn,constructor:"String",endsWith:fn,includes:fn,indexOf:fn,lastIndexOf:fn,localeCompare:fn,match:fn,matchAll:fn,normalize:fn,padEnd:fn,padStart:fn,repeat:fn,replace:fn,replaceAll:fn,search:fn,slice:fn,split:fn,startsWith:fn,substring:fn,toLocaleLowerCase:fn,toLocaleUpperCase:fn,toLowerCase:fn,toString:fn,toUpperCase:fn,trim:fn,trimEnd:fn,trimStart:fn,valueOf:fn,"@@iterator":fn,substr:fn,anchor:fn,big:fn,blink:fn,bold:fn,fixed:fn,fontcolor:fn,fontsize:fn,italics:fn,link:fn,small:fn,strike:fn,sub:fn,sup:fn,trimLeft:fn,trimRight:fn,compare:!1,isWellFormed:fn,toWellFormed:fn,unicodeSets:fn},"%StringIteratorPrototype%":{"[[Proto]]":"%IteratorPrototype%",next:fn,"@@toStringTag":"string"},"%InitialRegExp%":{"[[Proto]]":"%FunctionPrototype%",prototype:"%RegExpPrototype%","@@species":getter,input:!1,$_:!1,lastMatch:!1,"$&":!1,lastParen:!1,"$+":!1,leftContext:!1,"$`":!1,rightContext:!1,"$'":!1,$1:!1,$2:!1,$3:!1,$4:!1,$5:!1,$6:!1,$7:!1,$8:!1,$9:!1},"%SharedRegExp%":{"[[Proto]]":"%FunctionPrototype%",prototype:"%RegExpPrototype%","@@species":getter},"%RegExpPrototype%":{constructor:"%SharedRegExp%",exec:fn,dotAll:getter,flags:getter,global:getter,hasIndices:getter,ignoreCase:getter,"@@match":fn,"@@matchAll":fn,multiline:getter,"@@replace":fn,"@@search":fn,source:getter,"@@split":fn,sticky:getter,test:fn,toString:fn,unicode:getter,unicodeSets:getter,compile:!1},"%RegExpStringIteratorPrototype%":{"[[Proto]]":"%IteratorPrototype%",next:fn,"@@toStringTag":"string"},Array:{"[[Proto]]":"%FunctionPrototype%",from:fn,isArray:fn,of:fn,prototype:"%ArrayPrototype%","@@species":getter,at:fn,fromAsync:fn},"%ArrayPrototype%":{at:fn,length:"number",concat:fn,constructor:"Array",copyWithin:fn,entries:fn,every:fn,fill:fn,filter:fn,find:fn,findIndex:fn,flat:fn,flatMap:fn,forEach:fn,includes:fn,indexOf:fn,join:fn,keys:fn,lastIndexOf:fn,map:fn,pop:fn,push:fn,reduce:fn,reduceRight:fn,reverse:fn,shift:fn,slice:fn,some:fn,sort:fn,splice:fn,toLocaleString:fn,toString:fn,unshift:fn,values:fn,"@@iterator":fn,"@@unscopables":{"[[Proto]]":null,copyWithin:"boolean",entries:"boolean",fill:"boolean",find:"boolean",findIndex:"boolean",flat:"boolean",flatMap:"boolean",includes:"boolean",keys:"boolean",values:"boolean",at:"boolean",findLast:"boolean",findLastIndex:"boolean",toReversed:"boolean",toSorted:"boolean",toSpliced:"boolean",with:"boolean",group:"boolean",groupToMap:"boolean",groupBy:"boolean"},findLast:fn,findLastIndex:fn,toReversed:fn,toSorted:fn,toSpliced:fn,with:fn,group:fn,groupToMap:fn,groupBy:fn},"%ArrayIteratorPrototype%":{"[[Proto]]":"%IteratorPrototype%",next:fn,"@@toStringTag":"string"},"%TypedArray%":{"[[Proto]]":"%FunctionPrototype%",from:fn,of:fn,prototype:"%TypedArrayPrototype%","@@species":getter},"%TypedArrayPrototype%":{at:fn,buffer:getter,byteLength:getter,byteOffset:getter,constructor:"%TypedArray%",copyWithin:fn,entries:fn,every:fn,fill:fn,filter:fn,find:fn,findIndex:fn,forEach:fn,includes:fn,indexOf:fn,join:fn,keys:fn,lastIndexOf:fn,length:getter,map:fn,reduce:fn,reduceRight:fn,reverse:fn,set:fn,slice:fn,some:fn,sort:fn,subarray:fn,toLocaleString:fn,toString:fn,values:fn,"@@iterator":fn,"@@toStringTag":getter,findLast:fn,findLastIndex:fn,toReversed:fn,toSorted:fn,with:fn},BigInt64Array:TypedArray("%BigInt64ArrayPrototype%"),BigUint64Array:TypedArray("%BigUint64ArrayPrototype%"),Float32Array:TypedArray("%Float32ArrayPrototype%"),Float64Array:TypedArray("%Float64ArrayPrototype%"),Int16Array:TypedArray("%Int16ArrayPrototype%"),Int32Array:TypedArray("%Int32ArrayPrototype%"),Int8Array:TypedArray("%Int8ArrayPrototype%"),Uint16Array:TypedArray("%Uint16ArrayPrototype%"),Uint32Array:TypedArray("%Uint32ArrayPrototype%"),Uint8Array:TypedArray("%Uint8ArrayPrototype%"),Uint8ClampedArray:TypedArray("%Uint8ClampedArrayPrototype%"),"%BigInt64ArrayPrototype%":TypedArrayPrototype("BigInt64Array"),"%BigUint64ArrayPrototype%":TypedArrayPrototype("BigUint64Array"),"%Float32ArrayPrototype%":TypedArrayPrototype("Float32Array"),"%Float64ArrayPrototype%":TypedArrayPrototype("Float64Array"),"%Int16ArrayPrototype%":TypedArrayPrototype("Int16Array"),"%Int32ArrayPrototype%":TypedArrayPrototype("Int32Array"),"%Int8ArrayPrototype%":TypedArrayPrototype("Int8Array"),"%Uint16ArrayPrototype%":TypedArrayPrototype("Uint16Array"),"%Uint32ArrayPrototype%":TypedArrayPrototype("Uint32Array"),"%Uint8ArrayPrototype%":TypedArrayPrototype("Uint8Array"),"%Uint8ClampedArrayPrototype%":TypedArrayPrototype("Uint8ClampedArray"),Map:{"[[Proto]]":"%FunctionPrototype%","@@species":getter,prototype:"%MapPrototype%",groupBy:fn},"%MapPrototype%":{clear:fn,constructor:"Map",delete:fn,entries:fn,forEach:fn,get:fn,has:fn,keys:fn,set:fn,size:getter,values:fn,"@@iterator":fn,"@@toStringTag":"string"},"%MapIteratorPrototype%":{"[[Proto]]":"%IteratorPrototype%",next:fn,"@@toStringTag":"string"},Set:{"[[Proto]]":"%FunctionPrototype%",prototype:"%SetPrototype%","@@species":getter},"%SetPrototype%":{add:fn,clear:fn,constructor:"Set",delete:fn,entries:fn,forEach:fn,has:fn,keys:fn,size:getter,values:fn,"@@iterator":fn,"@@toStringTag":"string"},"%SetIteratorPrototype%":{"[[Proto]]":"%IteratorPrototype%",next:fn,"@@toStringTag":"string"},WeakMap:{"[[Proto]]":"%FunctionPrototype%",prototype:"%WeakMapPrototype%"},"%WeakMapPrototype%":{constructor:"WeakMap",delete:fn,get:fn,has:fn,set:fn,"@@toStringTag":"string"},WeakSet:{"[[Proto]]":"%FunctionPrototype%",prototype:"%WeakSetPrototype%"},"%WeakSetPrototype%":{add:fn,constructor:"WeakSet",delete:fn,has:fn,"@@toStringTag":"string"},ArrayBuffer:{"[[Proto]]":"%FunctionPrototype%",isView:fn,prototype:"%ArrayBufferPrototype%","@@species":getter,fromString:!1,fromBigInt:!1},"%ArrayBufferPrototype%":{byteLength:getter,constructor:"ArrayBuffer",slice:fn,"@@toStringTag":"string",concat:!1,transfer:fn,resize:fn,resizable:getter,maxByteLength:getter,transferToFixedLength:fn,detached:getter},SharedArrayBuffer:!1,"%SharedArrayBufferPrototype%":!1,DataView:{"[[Proto]]":"%FunctionPrototype%",BYTES_PER_ELEMENT:"number",prototype:"%DataViewPrototype%"},"%DataViewPrototype%":{buffer:getter,byteLength:getter,byteOffset:getter,constructor:"DataView",getBigInt64:fn,getBigUint64:fn,getFloat32:fn,getFloat64:fn,getInt8:fn,getInt16:fn,getInt32:fn,getUint8:fn,getUint16:fn,getUint32:fn,setBigInt64:fn,setBigUint64:fn,setFloat32:fn,setFloat64:fn,setInt8:fn,setInt16:fn,setInt32:fn,setUint8:fn,setUint16:fn,setUint32:fn,"@@toStringTag":"string"},Atomics:!1,JSON:{parse:fn,stringify:fn,"@@toStringTag":"string",rawJSON:fn,isRawJSON:fn},Iterator:{"[[Proto]]":"%FunctionPrototype%",prototype:"%IteratorPrototype%",from:fn},"%IteratorPrototype%":{"@@iterator":fn,constructor:"Iterator",map:fn,filter:fn,take:fn,drop:fn,flatMap:fn,reduce:fn,toArray:fn,forEach:fn,some:fn,every:fn,find:fn,"@@toStringTag":"string",toAsync:fn},"%WrapForValidIteratorPrototype%":{"[[Proto]]":"%IteratorPrototype%",next:fn,return:fn},"%IteratorHelperPrototype%":{"[[Proto]]":"%IteratorPrototype%",next:fn,return:fn,"@@toStringTag":"string"},AsyncIterator:{"[[Proto]]":"%FunctionPrototype%",prototype:"%AsyncIteratorPrototype%",from:fn},"%AsyncIteratorPrototype%":{"@@asyncIterator":fn,constructor:"AsyncIterator",map:fn,filter:fn,take:fn,drop:fn,flatMap:fn,reduce:fn,toArray:fn,forEach:fn,some:fn,every:fn,find:fn,"@@toStringTag":"string"},"%WrapForValidAsyncIteratorPrototype%":{"[[Proto]]":"%AsyncIteratorPrototype%",next:fn,return:fn},"%AsyncIteratorHelperPrototype%":{"[[Proto]]":"%AsyncIteratorPrototype%",next:fn,return:fn,"@@toStringTag":"string"},"%InertGeneratorFunction%":{"[[Proto]]":"%InertFunction%",prototype:"%Generator%"},"%Generator%":{"[[Proto]]":"%FunctionPrototype%",constructor:"%InertGeneratorFunction%",prototype:"%GeneratorPrototype%","@@toStringTag":"string"},"%InertAsyncGeneratorFunction%":{"[[Proto]]":"%InertFunction%",prototype:"%AsyncGenerator%"},"%AsyncGenerator%":{"[[Proto]]":"%FunctionPrototype%",constructor:"%InertAsyncGeneratorFunction%",prototype:"%AsyncGeneratorPrototype%",length:"number","@@toStringTag":"string"},"%GeneratorPrototype%":{"[[Proto]]":"%IteratorPrototype%",constructor:"%Generator%",next:fn,return:fn,throw:fn,"@@toStringTag":"string"},"%AsyncGeneratorPrototype%":{"[[Proto]]":"%AsyncIteratorPrototype%",constructor:"%AsyncGenerator%",next:fn,return:fn,throw:fn,"@@toStringTag":"string"},HandledPromise:{"[[Proto]]":"Promise",applyFunction:fn,applyFunctionSendOnly:fn,applyMethod:fn,applyMethodSendOnly:fn,get:fn,getSendOnly:fn,prototype:"%PromisePrototype%",resolve:fn},Promise:{"[[Proto]]":"%FunctionPrototype%",all:fn,allSettled:fn,any:!1,prototype:"%PromisePrototype%",race:fn,reject:fn,resolve:fn,"@@species":getter},"%PromisePrototype%":{catch:fn,constructor:"Promise",finally:fn,then:fn,"@@toStringTag":"string","UniqueSymbol(async_id_symbol)":accessor,"UniqueSymbol(trigger_async_id_symbol)":accessor,"UniqueSymbol(destroyed)":accessor},"%InertAsyncFunction%":{"[[Proto]]":"%InertFunction%",prototype:"%AsyncFunctionPrototype%"},"%AsyncFunctionPrototype%":{"[[Proto]]":"%FunctionPrototype%",constructor:"%InertAsyncFunction%",length:"number","@@toStringTag":"string"},Reflect:{apply:fn,construct:fn,defineProperty:fn,deleteProperty:fn,get:fn,getOwnPropertyDescriptor:fn,getPrototypeOf:fn,has:fn,isExtensible:fn,ownKeys:fn,preventExtensions:fn,set:fn,setPrototypeOf:fn,"@@toStringTag":"string"},Proxy:{"[[Proto]]":"%FunctionPrototype%",revocable:fn},escape:fn,unescape:fn,"%UniqueCompartment%":{"[[Proto]]":"%FunctionPrototype%",prototype:"%CompartmentPrototype%",toString:fn},"%InertCompartment%":{"[[Proto]]":"%FunctionPrototype%",prototype:"%CompartmentPrototype%",toString:fn},"%CompartmentPrototype%":{constructor:"%InertCompartment%",evaluate:fn,globalThis:getter,name:getter,toString:fn,import:asyncFn,load:asyncFn,importNow:fn,module:fn},lockdown:fn,harden:{...fn,isFake:"boolean"},"%InitialGetStackString%":fn};$h‍_once.permitted(permitted)},({imports:$h‍_imports,liveVar:$h‍_live,onceVar:$h‍_once,importMeta:$h‍____meta})=>{let TypeError,WeakSet,arrayFilter,create,defineProperty,entries,freeze,getOwnPropertyDescriptor,getOwnPropertyDescriptors,globalThis,is,isObject,objectHasOwnProperty,values,weaksetHas,constantProperties,sharedGlobalPropertyNames,universalPropertyNames,permitted;$h‍_imports([["./commons.js",[["TypeError",[$h‍_a=>TypeError=$h‍_a]],["WeakSet",[$h‍_a=>WeakSet=$h‍_a]],["arrayFilter",[$h‍_a=>arrayFilter=$h‍_a]],["create",[$h‍_a=>create=$h‍_a]],["defineProperty",[$h‍_a=>defineProperty=$h‍_a]],["entries",[$h‍_a=>entries=$h‍_a]],["freeze",[$h‍_a=>freeze=$h‍_a]],["getOwnPropertyDescriptor",[$h‍_a=>getOwnPropertyDescriptor=$h‍_a]],["getOwnPropertyDescriptors",[$h‍_a=>getOwnPropertyDescriptors=$h‍_a]],["globalThis",[$h‍_a=>globalThis=$h‍_a]],["is",[$h‍_a=>is=$h‍_a]],["isObject",[$h‍_a=>isObject=$h‍_a]],["objectHasOwnProperty",[$h‍_a=>objectHasOwnProperty=$h‍_a]],["values",[$h‍_a=>values=$h‍_a]],["weaksetHas",[$h‍_a=>weaksetHas=$h‍_a]]]],["./permits.js",[["constantProperties",[$h‍_a=>constantProperties=$h‍_a]],["sharedGlobalPropertyNames",[$h‍_a=>sharedGlobalPropertyNames=$h‍_a]],["universalPropertyNames",[$h‍_a=>universalPropertyNames=$h‍_a]],["permitted",[$h‍_a=>permitted=$h‍_a]]]]]);const isFunction=obj=>"function"==typeof obj;function initProperty(obj,name,desc){if(objectHasOwnProperty(obj,name)){const preDesc=getOwnPropertyDescriptor(obj,name);if(!preDesc||!is(preDesc.value,desc.value)||preDesc.get!==desc.get||preDesc.set!==desc.set||preDesc.writable!==desc.writable||preDesc.enumerable!==desc.enumerable||preDesc.configurable!==desc.configurable)throw TypeError(`Conflicting definitions of ${name}`)}defineProperty(obj,name,desc)}function sampleGlobals(globalObject,newPropertyNames){const newIntrinsics={__proto__:null};for(const[globalName,intrinsicName]of entries(newPropertyNames))objectHasOwnProperty(globalObject,globalName)&&(newIntrinsics[intrinsicName]=globalObject[globalName]);return newIntrinsics}const makeIntrinsicsCollector=()=>{const intrinsics=create(null);let pseudoNatives;const addIntrinsics=newIntrinsics=>{!function(obj,descs){for(const[name,desc]of entries(descs))initProperty(obj,name,desc)}(intrinsics,getOwnPropertyDescriptors(newIntrinsics))};freeze(addIntrinsics);const completePrototypes=()=>{for(const[name,intrinsic]of entries(intrinsics)){if(!isObject(intrinsic))continue;if(!objectHasOwnProperty(intrinsic,"prototype"))continue;const permit=permitted[name];if("object"!=typeof permit)throw TypeError(`Expected permit object at whitelist.${name}`);const namePrototype=permit.prototype;if(!namePrototype)throw TypeError(`${name}.prototype property not whitelisted`);if("string"!=typeof namePrototype||!objectHasOwnProperty(permitted,namePrototype))throw TypeError(`Unrecognized ${name}.prototype whitelist entry`);const intrinsicPrototype=intrinsic.prototype;if(objectHasOwnProperty(intrinsics,namePrototype)){if(intrinsics[namePrototype]!==intrinsicPrototype)throw TypeError(`Conflicting bindings of ${namePrototype}`)}else intrinsics[namePrototype]=intrinsicPrototype}};freeze(completePrototypes);const finalIntrinsics=()=>(freeze(intrinsics),pseudoNatives=new WeakSet(arrayFilter(values(intrinsics),isFunction)),intrinsics);freeze(finalIntrinsics);const isPseudoNative=obj=>{if(!pseudoNatives)throw TypeError("isPseudoNative can only be called after finalIntrinsics");return weaksetHas(pseudoNatives,obj)};freeze(isPseudoNative);const intrinsicsCollector={addIntrinsics:addIntrinsics,completePrototypes:completePrototypes,finalIntrinsics:finalIntrinsics,isPseudoNative:isPseudoNative};return freeze(intrinsicsCollector),addIntrinsics(constantProperties),addIntrinsics(sampleGlobals(globalThis,universalPropertyNames)),intrinsicsCollector};$h‍_once.makeIntrinsicsCollector(makeIntrinsicsCollector);$h‍_once.getGlobalIntrinsics((globalObject=>{const{addIntrinsics:addIntrinsics,finalIntrinsics:finalIntrinsics}=makeIntrinsicsCollector();return addIntrinsics(sampleGlobals(globalObject,sharedGlobalPropertyNames)),finalIntrinsics()}))},({imports:$h‍_imports,liveVar:$h‍_live,onceVar:$h‍_once,importMeta:$h‍____meta})=>{let permitted,FunctionInstance,isAccessorPermit,Map,String,Symbol,TypeError,arrayFilter,arrayIncludes,arrayMap,entries,getOwnPropertyDescriptor,getPrototypeOf,isObject,mapGet,objectHasOwnProperty,ownKeys,symbolKeyFor;$h‍_imports([["./permits.js",[["permitted",[$h‍_a=>permitted=$h‍_a]],["FunctionInstance",[$h‍_a=>FunctionInstance=$h‍_a]],["isAccessorPermit",[$h‍_a=>isAccessorPermit=$h‍_a]]]],["./commons.js",[["Map",[$h‍_a=>Map=$h‍_a]],["String",[$h‍_a=>String=$h‍_a]],["Symbol",[$h‍_a=>Symbol=$h‍_a]],["TypeError",[$h‍_a=>TypeError=$h‍_a]],["arrayFilter",[$h‍_a=>arrayFilter=$h‍_a]],["arrayIncludes",[$h‍_a=>arrayIncludes=$h‍_a]],["arrayMap",[$h‍_a=>arrayMap=$h‍_a]],["entries",[$h‍_a=>entries=$h‍_a]],["getOwnPropertyDescriptor",[$h‍_a=>getOwnPropertyDescriptor=$h‍_a]],["getPrototypeOf",[$h‍_a=>getPrototypeOf=$h‍_a]],["isObject",[$h‍_a=>isObject=$h‍_a]],["mapGet",[$h‍_a=>mapGet=$h‍_a]],["objectHasOwnProperty",[$h‍_a=>objectHasOwnProperty=$h‍_a]],["ownKeys",[$h‍_a=>ownKeys=$h‍_a]],["symbolKeyFor",[$h‍_a=>symbolKeyFor=$h‍_a]]]]]),$h‍_once.default((function(intrinsics,markVirtualizedNativeFunction){const primitives=["undefined","boolean","number","string","symbol"],wellKnownSymbolNames=new Map(Symbol?arrayMap(arrayFilter(entries(permitted["%SharedSymbol%"]),(([name,permit])=>"symbol"===permit&&"symbol"==typeof Symbol[name])),(([name])=>[Symbol[name],`@@${name}`])):[]);function asStringPropertyName(path,prop){if("string"==typeof prop)return prop;const wellKnownSymbol=mapGet(wellKnownSymbolNames,prop);if("symbol"==typeof prop){if(wellKnownSymbol)return wellKnownSymbol;{const registeredKey=symbolKeyFor(prop);return void 0!==registeredKey?`RegisteredSymbol(${registeredKey})`:`Unique${String(prop)}`}}throw TypeError(`Unexpected property name type ${path} ${prop}`)}function isAllowedPropertyValue(path,value,prop,permit){if("object"==typeof permit)return visitProperties(path,value,permit),!0;if(!1===permit)return!1;if("string"==typeof permit)if("prototype"===prop||"constructor"===prop){if(objectHasOwnProperty(intrinsics,permit)){if(value!==intrinsics[permit])throw TypeError(`Does not match whitelist ${path}`);return!0}}else if(arrayIncludes(primitives,permit)){if(typeof value!==permit)throw TypeError(`At ${path} expected ${permit} not ${typeof value}`);return!0}throw TypeError(`Unexpected whitelist permit ${permit} at ${path}`)}function isAllowedProperty(path,obj,prop,permit){const desc=getOwnPropertyDescriptor(obj,prop);if(!desc)throw TypeError(`Property ${prop} not found at ${path}`);if(objectHasOwnProperty(desc,"value")){if(isAccessorPermit(permit))throw TypeError(`Accessor expected at ${path}`);return isAllowedPropertyValue(path,desc.value,prop,permit)}if(!isAccessorPermit(permit))throw TypeError(`Accessor not expected at ${path}`);return isAllowedPropertyValue(`${path}<get>`,desc.get,prop,permit.get)&&isAllowedPropertyValue(`${path}<set>`,desc.set,prop,permit.set)}function getSubPermit(obj,permit,prop){const permitProp="__proto__"===prop?"--proto--":prop;return objectHasOwnProperty(permit,permitProp)?permit[permitProp]:"function"==typeof obj&&objectHasOwnProperty(FunctionInstance,permitProp)?FunctionInstance[permitProp]:void 0}function visitProperties(path,obj,permit){if(null==obj)return;!function(path,obj,protoName){if(!isObject(obj))throw TypeError(`Object expected: ${path}, ${obj}, ${protoName}`);const proto=getPrototypeOf(obj);if(null!==proto||null!==protoName){if(void 0!==protoName&&"string"!=typeof protoName)throw TypeError(`Malformed whitelist permit ${path}.__proto__`);if(proto!==intrinsics[protoName||"%ObjectPrototype%"])throw TypeError(`Unexpected intrinsic ${path}.__proto__ at ${protoName}`)}}(path,obj,permit["[[Proto]]"]),"function"==typeof obj&&markVirtualizedNativeFunction(obj);for(const prop of ownKeys(obj)){const propString=asStringPropertyName(path,prop),subPath=`${path}.${propString}`,subPermit=getSubPermit(obj,permit,propString);if(!subPermit||!isAllowedProperty(subPath,obj,prop,subPermit)){!1!==subPermit&&console.warn(`Removing ${subPath}`);try{delete obj[prop]}catch(err){if(prop in obj){if("function"==typeof obj&&"prototype"===prop&&(obj.prototype=void 0,void 0===obj.prototype)){console.warn(`Tolerating undeletable ${subPath} === undefined`);continue}console.error(`failed to delete ${subPath}`,err)}else console.error(`deleting ${subPath} threw`,err);throw err}}}}visitProperties("intrinsics",intrinsics,permitted)}))},({imports:$h‍_imports,liveVar:$h‍_live,onceVar:$h‍_once,importMeta:$h‍____meta})=>{let FERAL_FUNCTION,SyntaxError,TypeError,defineProperties,getPrototypeOf,setPrototypeOf,freeze;$h‍_imports([["./commons.js",[["FERAL_FUNCTION",[$h‍_a=>FERAL_FUNCTION=$h‍_a]],["SyntaxError",[$h‍_a=>SyntaxError=$h‍_a]],["TypeError",[$h‍_a=>TypeError=$h‍_a]],["defineProperties",[$h‍_a=>defineProperties=$h‍_a]],["getPrototypeOf",[$h‍_a=>getPrototypeOf=$h‍_a]],["setPrototypeOf",[$h‍_a=>setPrototypeOf=$h‍_a]],["freeze",[$h‍_a=>freeze=$h‍_a]]]]]),$h‍_once.default((function(){try{FERAL_FUNCTION.prototype.constructor("return 1")}catch(ignore){return freeze({})}const newIntrinsics={};function repairFunction(name,intrinsicName,declaration){let FunctionInstance;try{FunctionInstance=(0,eval)(declaration)}catch(e){if(e instanceof SyntaxError)return;throw e}const FunctionPrototype=getPrototypeOf(FunctionInstance),InertConstructor=function(){throw TypeError("Function.prototype.constructor is not a valid constructor.")};defineProperties(InertConstructor,{prototype:{value:FunctionPrototype},name:{value:name,writable:!1,enumerable:!1,configurable:!0}}),defineProperties(FunctionPrototype,{constructor:{value:InertConstructor}}),InertConstructor!==FERAL_FUNCTION.prototype.constructor&&setPrototypeOf(InertConstructor,FERAL_FUNCTION.prototype.constructor),newIntrinsics[intrinsicName]=InertConstructor}return repairFunction("Function","%InertFunction%","(function(){})"),repairFunction("GeneratorFunction","%InertGeneratorFunction%","(function*(){})"),repairFunction("AsyncFunction","%InertAsyncFunction%","(async function(){})"),repairFunction("AsyncGeneratorFunction","%InertAsyncGeneratorFunction%","(async function*(){})"),newIntrinsics}))},({imports:$h‍_imports,liveVar:$h‍_live,onceVar:$h‍_once,importMeta:$h‍____meta})=>{let Date,TypeError,apply,construct,defineProperties;$h‍_imports([["./commons.js",[["Date",[$h‍_a=>Date=$h‍_a]],["TypeError",[$h‍_a=>TypeError=$h‍_a]],["apply",[$h‍_a=>apply=$h‍_a]],["construct",[$h‍_a=>construct=$h‍_a]],["defineProperties",[$h‍_a=>defineProperties=$h‍_a]]]]]),$h‍_once.default((function(dateTaming="safe"){if("safe"!==dateTaming&&"unsafe"!==dateTaming)throw TypeError(`unrecognized dateTaming ${dateTaming}`);const OriginalDate=Date,DatePrototype=OriginalDate.prototype,tamedMethods={now(){throw TypeError("secure mode Calling %SharedDate%.now() throws")}},makeDateConstructor=({powers:powers="none"}={})=>{let ResultDate;return ResultDate="original"===powers?function(...rest){return void 0===new.target?apply(OriginalDate,void 0,rest):construct(OriginalDate,rest,new.target)}:function(...rest){if(void 0===new.target)throw TypeError("secure mode Calling %SharedDate% constructor as a function throws");if(0===rest.length)throw TypeError("secure mode Calling new %SharedDate%() with no arguments throws");return construct(OriginalDate,rest,new.target)},defineProperties(ResultDate,{length:{value:7},prototype:{value:DatePrototype,writable:!1,enumerable:!1,configurable:!1},parse:{value:OriginalDate.parse,writable:!0,enumerable:!1,configurable:!0},UTC:{value:OriginalDate.UTC,writable:!0,enumerable:!1,configurable:!0}}),ResultDate},InitialDate=makeDateConstructor({powers:"original"}),SharedDate=makeDateConstructor({powers:"none"});return defineProperties(InitialDate,{now:{value:OriginalDate.now,writable:!0,enumerable:!1,configurable:!0}}),defineProperties(SharedDate,{now:{value:tamedMethods.now,writable:!0,enumerable:!1,configurable:!0}}),defineProperties(DatePrototype,{constructor:{value:SharedDate}}),{"%InitialDate%":InitialDate,"%SharedDate%":SharedDate}}))},({imports:$h‍_imports,liveVar:$h‍_live,onceVar:$h‍_once,importMeta:$h‍____meta})=>{let Math,TypeError,create,getOwnPropertyDescriptors,objectPrototype;$h‍_imports([["./commons.js",[["Math",[$h‍_a=>Math=$h‍_a]],["TypeError",[$h‍_a=>TypeError=$h‍_a]],["create",[$h‍_a=>create=$h‍_a]],["getOwnPropertyDescriptors",[$h‍_a=>getOwnPropertyDescriptors=$h‍_a]],["objectPrototype",[$h‍_a=>objectPrototype=$h‍_a]]]]]),$h‍_once.default((function(mathTaming="safe"){if("safe"!==mathTaming&&"unsafe"!==mathTaming)throw TypeError(`unrecognized mathTaming ${mathTaming}`);const originalMath=Math,initialMath=originalMath,{random:_,...otherDescriptors}=getOwnPropertyDescriptors(originalMath);return{"%InitialMath%":initialMath,"%SharedMath%":create(objectPrototype,{...otherDescriptors,random:{value:{random(){throw TypeError("secure mode %SharedMath%.random() throws")}}.random,writable:!0,enumerable:!1,configurable:!0}})}}))},({imports:$h‍_imports,liveVar:$h‍_live,onceVar:$h‍_once,importMeta:$h‍____meta})=>{let FERAL_REG_EXP,TypeError,construct,defineProperties,getOwnPropertyDescriptor,speciesSymbol;$h‍_imports([["./commons.js",[["FERAL_REG_EXP",[$h‍_a=>FERAL_REG_EXP=$h‍_a]],["TypeError",[$h‍_a=>TypeError=$h‍_a]],["construct",[$h‍_a=>construct=$h‍_a]],["defineProperties",[$h‍_a=>defineProperties=$h‍_a]],["getOwnPropertyDescriptor",[$h‍_a=>getOwnPropertyDescriptor=$h‍_a]],["speciesSymbol",[$h‍_a=>speciesSymbol=$h‍_a]]]]]),$h‍_once.default((function(regExpTaming="safe"){if("safe"!==regExpTaming&&"unsafe"!==regExpTaming)throw TypeError(`unrecognized regExpTaming ${regExpTaming}`);const RegExpPrototype=FERAL_REG_EXP.prototype,makeRegExpConstructor=(_={})=>{const ResultRegExp=function(...rest){return void 0===new.target?FERAL_REG_EXP(...rest):construct(FERAL_REG_EXP,rest,new.target)},speciesDesc=getOwnPropertyDescriptor(FERAL_REG_EXP,speciesSymbol);if(!speciesDesc)throw TypeError("no RegExp[Symbol.species] descriptor");return defineProperties(ResultRegExp,{length:{value:2},prototype:{value:RegExpPrototype,writable:!1,enumerable:!1,configurable:!1},[speciesSymbol]:speciesDesc}),ResultRegExp},InitialRegExp=makeRegExpConstructor(),SharedRegExp=makeRegExpConstructor();return"unsafe"!==regExpTaming&&delete RegExpPrototype.compile,defineProperties(RegExpPrototype,{constructor:{value:SharedRegExp}}),{"%InitialRegExp%":InitialRegExp,"%SharedRegExp%":SharedRegExp}}))},({imports:$h‍_imports,liveVar:$h‍_live,onceVar:$h‍_once,importMeta:$h‍____meta})=>{$h‍_imports([]);$h‍_once.minEnablements({"%ObjectPrototype%":{toString:!0},"%FunctionPrototype%":{toString:!0},"%ErrorPrototype%":{name:!0}});const moderateEnablements={"%ObjectPrototype%":{toString:!0,valueOf:!0},"%ArrayPrototype%":{toString:!0,push:!0},"%FunctionPrototype%":{constructor:!0,bind:!0,toString:!0},"%ErrorPrototype%":{constructor:!0,message:!0,name:!0,toString:!0},"%TypeErrorPrototype%":{constructor:!0,message:!0,name:!0},"%SyntaxErrorPrototype%":{message:!0,name:!0},"%RangeErrorPrototype%":{message:!0,name:!0},"%URIErrorPrototype%":{message:!0,name:!0},"%EvalErrorPrototype%":{message:!0,name:!0},"%ReferenceErrorPrototype%":{message:!0,name:!0},"%PromisePrototype%":{constructor:!0},"%TypedArrayPrototype%":"*","%Generator%":{constructor:!0,name:!0,toString:!0},"%IteratorPrototype%":{toString:!0}};$h‍_once.moderateEnablements(moderateEnablements);const severeEnablements={...moderateEnablements,"%ObjectPrototype%":"*","%TypedArrayPrototype%":"*","%MapPrototype%":"*","%SetPrototype%":"*"};$h‍_once.severeEnablements(severeEnablements)},({imports:$h‍_imports,liveVar:$h‍_live,onceVar:$h‍_once,importMeta:$h‍____meta})=>{let Set,String,TypeError,arrayForEach,defineProperty,getOwnPropertyDescriptor,getOwnPropertyDescriptors,getOwnPropertyNames,isObject,objectHasOwnProperty,ownKeys,setHas,minEnablements,moderateEnablements,severeEnablements;$h‍_imports([["./commons.js",[["Set",[$h‍_a=>Set=$h‍_a]],["String",[$h‍_a=>String=$h‍_a]],["TypeError",[$h‍_a=>TypeError=$h‍_a]],["arrayForEach",[$h‍_a=>arrayForEach=$h‍_a]],["defineProperty",[$h‍_a=>defineProperty=$h‍_a]],["getOwnPropertyDescriptor",[$h‍_a=>getOwnPropertyDescriptor=$h‍_a]],["getOwnPropertyDescriptors",[$h‍_a=>getOwnPropertyDescriptors=$h‍_a]],["getOwnPropertyNames",[$h‍_a=>getOwnPropertyNames=$h‍_a]],["isObject",[$h‍_a=>isObject=$h‍_a]],["objectHasOwnProperty",[$h‍_a=>objectHasOwnProperty=$h‍_a]],["ownKeys",[$h‍_a=>ownKeys=$h‍_a]],["setHas",[$h‍_a=>setHas=$h‍_a]]]],["./enablements.js",[["minEnablements",[$h‍_a=>minEnablements=$h‍_a]],["moderateEnablements",[$h‍_a=>moderateEnablements=$h‍_a]],["severeEnablements",[$h‍_a=>severeEnablements=$h‍_a]]]]]),$h‍_once.default((function(intrinsics,overrideTaming,overrideDebug=[]){const debugProperties=new Set(overrideDebug);function enable(path,obj,prop,desc){if("value"in desc&&desc.configurable){const{value:value}=desc;function getter(){return value}defineProperty(getter,"originalValue",{value:value,writable:!1,enumerable:!1,configurable:!1});const isDebug=setHas(debugProperties,prop);function setter(newValue){if(obj===this)throw TypeError(`Cannot assign to read only property '${String(prop)}' of '${path}'`);objectHasOwnProperty(this,prop)?this[prop]=newValue:(isDebug&&console.error(TypeError(`Override property ${prop}`)),defineProperty(this,prop,{value:newValue,writable:!0,enumerable:!0,configurable:!0}))}defineProperty(obj,prop,{get:getter,set:setter,enumerable:desc.enumerable,configurable:desc.configurable})}}function enableProperty(path,obj,prop){const desc=getOwnPropertyDescriptor(obj,prop);desc&&enable(path,obj,prop,desc)}function enableAllProperties(path,obj){const descs=getOwnPropertyDescriptors(obj);descs&&arrayForEach(ownKeys(descs),(prop=>enable(path,obj,prop,descs[prop])))}let plan;switch(overrideTaming){case"min":plan=minEnablements;break;case"moderate":plan=moderateEnablements;break;case"severe":plan=severeEnablements;break;default:throw TypeError(`unrecognized overrideTaming ${overrideTaming}`)}!function enableProperties(path,obj,plan){for(const prop of getOwnPropertyNames(plan)){const desc=getOwnPropertyDescriptor(obj,prop);if(!desc||desc.get||desc.set)continue;const subPath=`${path}.${String(prop)}`,subPlan=plan[prop];if(!0===subPlan)enableProperty(subPath,obj,prop);else if("*"===subPlan)enableAllProperties(subPath,desc.value);else{if(!isObject(subPlan))throw TypeError(`Unexpected override enablement plan ${subPath}`);enableProperties(subPath,desc.value,subPlan)}}}("root",intrinsics,plan)}))},({imports:$h‍_imports,liveVar:$h‍_live,onceVar:$h‍_once,importMeta:$h‍____meta})=>{let Number,String,TypeError,defineProperty,getOwnPropertyNames,isObject,regexpExec,assert;$h‍_imports([["./commons.js",[["Number",[$h‍_a=>Number=$h‍_a]],["String",[$h‍_a=>String=$h‍_a]],["TypeError",[$h‍_a=>TypeError=$h‍_a]],["defineProperty",[$h‍_a=>defineProperty=$h‍_a]],["getOwnPropertyNames",[$h‍_a=>getOwnPropertyNames=$h‍_a]],["isObject",[$h‍_a=>isObject=$h‍_a]],["regexpExec",[$h‍_a=>regexpExec=$h‍_a]]]],["./error/assert.js",[["assert",[$h‍_a=>assert=$h‍_a]]]]]);const{Fail:Fail,quote:q}=assert,localePattern=/^(\w*[a-z])Locale([A-Z]\w*)$/,tamedMethods={localeCompare(arg){if(null==this)throw TypeError('Cannot localeCompare with null or undefined "this" value');const s=`${this}`,that=`${arg}`;return s<that?-1:s>that?1:(s===that||Fail`expected ${q(s)} and ${q(that)} to compare`,0)},toString(){return`${this}`}},nonLocaleCompare=tamedMethods.localeCompare,numberToString=tamedMethods.toString;$h‍_once.default((function(intrinsics,localeTaming="safe"){if("safe"!==localeTaming&&"unsafe"!==localeTaming)throw TypeError(`unrecognized localeTaming ${localeTaming}`);if("unsafe"!==localeTaming){defineProperty(String.prototype,"localeCompare",{value:nonLocaleCompare});for(const intrinsicName of getOwnPropertyNames(intrinsics)){const intrinsic=intrinsics[intrinsicName];if(isObject(intrinsic))for(const methodName of getOwnPropertyNames(intrinsic)){const match=regexpExec(localePattern,methodName);if(match){"function"==typeof intrinsic[methodName]||Fail`expected ${q(methodName)} to be a function`;const nonLocaleMethodName=`${match[1]}${match[2]}`,method=intrinsic[nonLocaleMethodName];"function"==typeof method||Fail`function ${q(nonLocaleMethodName)} not found`,defineProperty(intrinsic,methodName,{value:method})}}}defineProperty(Number.prototype,"toLocaleString",{value:numberToString})}}))},({imports:$h‍_imports,liveVar:$h‍_live,onceVar:$h‍_once,importMeta:$h‍____meta})=>{$h‍_imports([]);$h‍_once.makeEvalFunction((safeEvaluate=>source=>"string"!=typeof source?source:safeEvaluate(source)))},({imports:$h‍_imports,liveVar:$h‍_live,onceVar:$h‍_once,importMeta:$h‍____meta})=>{let FERAL_FUNCTION,arrayJoin,arrayPop,defineProperties,getPrototypeOf,assert;$h‍_imports([["./commons.js",[["FERAL_FUNCTION",[$h‍_a=>FERAL_FUNCTION=$h‍_a]],["arrayJoin",[$h‍_a=>arrayJoin=$h‍_a]],["arrayPop",[$h‍_a=>arrayPop=$h‍_a]],["defineProperties",[$h‍_a=>defineProperties=$h‍_a]],["getPrototypeOf",[$h‍_a=>getPrototypeOf=$h‍_a]]]],["./error/assert.js",[["assert",[$h‍_a=>assert=$h‍_a]]]]]);const{Fail:Fail}=assert;$h‍_once.makeFunctionConstructor((safeEvaluate=>{const newFunction=function(_body){const bodyText=`${arrayPop(arguments)||""}`,parameters=`${arrayJoin(arguments,",")}`;new FERAL_FUNCTION(parameters,""),new FERAL_FUNCTION(bodyText);return safeEvaluate(`(function anonymous(${parameters}\n) {\n${bodyText}\n})`)};return defineProperties(newFunction,{prototype:{value:FERAL_FUNCTION.prototype,writable:!1,enumerable:!1,configurable:!1}}),getPrototypeOf(FERAL_FUNCTION)===FERAL_FUNCTION.prototype||Fail`Function prototype is the same accross compartments`,getPrototypeOf(newFunction)===FERAL_FUNCTION.prototype||Fail`Function constructor prototype is the same accross compartments`,newFunction}))},({imports:$h‍_imports,liveVar:$h‍_live,onceVar:$h‍_once,importMeta:$h‍____meta})=>{let TypeError,assign,create,defineProperty,entries,freeze,objectHasOwnProperty,unscopablesSymbol,makeEvalFunction,makeFunctionConstructor,constantProperties,universalPropertyNames;$h‍_imports([["./commons.js",[["TypeError",[$h‍_a=>TypeError=$h‍_a]],["assign",[$h‍_a=>assign=$h‍_a]],["create",[$h‍_a=>create=$h‍_a]],["defineProperty",[$h‍_a=>defineProperty=$h‍_a]],["entries",[$h‍_a=>entries=$h‍_a]],["freeze",[$h‍_a=>freeze=$h‍_a]],["objectHasOwnProperty",[$h‍_a=>objectHasOwnProperty=$h‍_a]],["unscopablesSymbol",[$h‍_a=>unscopablesSymbol=$h‍_a]]]],["./make-eval-function.js",[["makeEvalFunction",[$h‍_a=>makeEvalFunction=$h‍_a]]]],["./make-function-constructor.js",[["makeFunctionConstructor",[$h‍_a=>makeFunctionConstructor=$h‍_a]]]],["./permits.js",[["constantProperties",[$h‍_a=>constantProperties=$h‍_a]],["universalPropertyNames",[$h‍_a=>universalPropertyNames=$h‍_a]]]]]);$h‍_once.setGlobalObjectSymbolUnscopables((globalObject=>{defineProperty(globalObject,unscopablesSymbol,freeze(assign(create(null),{set:freeze((()=>{throw TypeError("Cannot set Symbol.unscopables of a Compartment's globalThis")})),enumerable:!1,configurable:!1})))}));$h‍_once.setGlobalObjectConstantProperties((globalObject=>{for(const[name,constant]of entries(constantProperties))defineProperty(globalObject,name,{value:constant,writable:!1,enumerable:!1,configurable:!1})}));$h‍_once.setGlobalObjectMutableProperties(((globalObject,{intrinsics:intrinsics,newGlobalPropertyNames:newGlobalPropertyNames,makeCompartmentConstructor:makeCompartmentConstructor,markVirtualizedNativeFunction:markVirtualizedNativeFunction})=>{for(const[name,intrinsicName]of entries(universalPropertyNames))objectHasOwnProperty(intrinsics,intrinsicName)&&defineProperty(globalObject,name,{value:intrinsics[intrinsicName],writable:!0,enumerable:!1,configurable:!0});for(const[name,intrinsicName]of entries(newGlobalPropertyNames))objectHasOwnProperty(intrinsics,intrinsicName)&&defineProperty(globalObject,name,{value:intrinsics[intrinsicName],writable:!0,enumerable:!1,configurable:!0});const perCompartmentGlobals={globalThis:globalObject};perCompartmentGlobals.Compartment=makeCompartmentConstructor(makeCompartmentConstructor,intrinsics,markVirtualizedNativeFunction);for(const[name,value]of entries(perCompartmentGlobals))defineProperty(globalObject,name,{value:value,writable:!0,enumerable:!1,configurable:!0}),"function"==typeof value&&markVirtualizedNativeFunction(value)}));$h‍_once.setGlobalObjectEvaluators(((globalObject,evaluator,markVirtualizedNativeFunction)=>{{const f=makeEvalFunction(evaluator);markVirtualizedNativeFunction(f),defineProperty(globalObject,"eval",{value:f,writable:!0,enumerable:!1,configurable:!0})}{const f=makeFunctionConstructor(evaluator);markVirtualizedNativeFunction(f),defineProperty(globalObject,"Function",{value:f,writable:!0,enumerable:!1,configurable:!0})}}))},({imports:$h‍_imports,liveVar:$h‍_live,onceVar:$h‍_once,importMeta:$h‍____meta})=>{let Proxy,String,TypeError,ReferenceError,create,freeze,getOwnPropertyDescriptors,globalThis,immutableObject,assert;$h‍_imports([["./commons.js",[["Proxy",[$h‍_a=>Proxy=$h‍_a]],["String",[$h‍_a=>String=$h‍_a]],["TypeError",[$h‍_a=>TypeError=$h‍_a]],["ReferenceError",[$h‍_a=>ReferenceError=$h‍_a]],["create",[$h‍_a=>create=$h‍_a]],["freeze",[$h‍_a=>freeze=$h‍_a]],["getOwnPropertyDescriptors",[$h‍_a=>getOwnPropertyDescriptors=$h‍_a]],["globalThis",[$h‍_a=>globalThis=$h‍_a]],["immutableObject",[$h‍_a=>immutableObject=$h‍_a]]]],["./error/assert.js",[["assert",[$h‍_a=>assert=$h‍_a]]]]]);const{Fail:Fail,quote:q}=assert,alwaysThrowHandler=new Proxy(immutableObject,freeze({get(_shadow,prop){Fail`Please report unexpected scope handler trap: ${q(String(prop))}`}}));$h‍_once.alwaysThrowHandler(alwaysThrowHandler);const strictScopeTerminatorHandler=freeze(create(alwaysThrowHandler,getOwnPropertyDescriptors({get(_shadow,_prop){},set(_shadow,prop,_value){throw ReferenceError(`${String(prop)} is not defined`)},has:(_shadow,prop)=>prop in globalThis,getPrototypeOf:_shadow=>null,getOwnPropertyDescriptor(_shadow,prop){const quotedProp=q(String(prop));console.warn(`getOwnPropertyDescriptor trap on scopeTerminatorHandler for ${quotedProp}`,TypeError().stack)},ownKeys:_shadow=>[]})));$h‍_once.strictScopeTerminatorHandler(strictScopeTerminatorHandler);const strictScopeTerminator=new Proxy(immutableObject,strictScopeTerminatorHandler);$h‍_once.strictScopeTerminator(strictScopeTerminator)},({imports:$h‍_imports,liveVar:$h‍_live,onceVar:$h‍_once,importMeta:$h‍____meta})=>{let Proxy,create,freeze,getOwnPropertyDescriptors,immutableObject,reflectSet,strictScopeTerminatorHandler,alwaysThrowHandler;$h‍_imports([["./commons.js",[["Proxy",[$h‍_a=>Proxy=$h‍_a]],["create",[$h‍_a=>create=$h‍_a]],["freeze",[$h‍_a=>freeze=$h‍_a]],["getOwnPropertyDescriptors",[$h‍_a=>getOwnPropertyDescriptors=$h‍_a]],["immutableObject",[$h‍_a=>immutableObject=$h‍_a]],["reflectSet",[$h‍_a=>reflectSet=$h‍_a]]]],["./strict-scope-terminator.js",[["strictScopeTerminatorHandler",[$h‍_a=>strictScopeTerminatorHandler=$h‍_a]],["alwaysThrowHandler",[$h‍_a=>alwaysThrowHandler=$h‍_a]]]]]);const createSloppyGlobalsScopeTerminator=globalObject=>{const scopeProxyHandlerProperties={...strictScopeTerminatorHandler,set:(_shadow,prop,value)=>reflectSet(globalObject,prop,value),has:(_shadow,_prop)=>!0},sloppyGlobalsScopeTerminatorHandler=freeze(create(alwaysThrowHandler,getOwnPropertyDescriptors(scopeProxyHandlerProperties)));return new Proxy(immutableObject,sloppyGlobalsScopeTerminatorHandler)};$h‍_once.createSloppyGlobalsScopeTerminator(createSloppyGlobalsScopeTerminator),freeze(createSloppyGlobalsScopeTerminator)},({imports:$h‍_imports,liveVar:$h‍_live,onceVar:$h‍_once,importMeta:$h‍____meta})=>{let FERAL_EVAL,create,defineProperties,freeze,assert;$h‍_imports([["./commons.js",[["FERAL_EVAL",[$h‍_a=>FERAL_EVAL=$h‍_a]],["create",[$h‍_a=>create=$h‍_a]],["defineProperties",[$h‍_a=>defineProperties=$h‍_a]],["freeze",[$h‍_a=>freeze=$h‍_a]]]],["./error/assert.js",[["assert",[$h‍_a=>assert=$h‍_a]]]]]);const{Fail:Fail}=assert;$h‍_once.makeEvalScopeKit((()=>{const evalScope=create(null),oneTimeEvalProperties=freeze({eval:{get:()=>(delete evalScope.eval,FERAL_EVAL),enumerable:!1,configurable:!0}}),evalScopeKit={evalScope:evalScope,allowNextEvalToBeUnsafe(){const{revoked:revoked}=evalScopeKit;null!==revoked&&Fail`a handler did not reset allowNextEvalToBeUnsafe ${revoked.err}`,defineProperties(evalScope,oneTimeEvalProperties)},revoked:null};return evalScopeKit}))},({imports:$h‍_imports,liveVar:$h‍_live,onceVar:$h‍_once,importMeta:$h‍____meta})=>{let FERAL_REG_EXP,regexpExec,stringSlice;$h‍_imports([["./commons.js",[["FERAL_REG_EXP",[$h‍_a=>FERAL_REG_EXP=$h‍_a]],["regexpExec",[$h‍_a=>regexpExec=$h‍_a]],["stringSlice",[$h‍_a=>stringSlice=$h‍_a]]]]]);const sourceMetaEntriesRegExp=new FERAL_REG_EXP("(?:\\s*//\\s*[@#]\\s*([a-zA-Z][a-zA-Z0-9]*)\\s*=\\s*([^\\s\\*]*)|/\\*\\s*[@#]\\s*([a-zA-Z][a-zA-Z0-9]*)\\s*=\\s*([^\\s\\*]*)\\s*\\*/)\\s*$");$h‍_once.getSourceURL((src=>{let sourceURL="<unknown>";for(;src.length>0;){const match=regexpExec(sourceMetaEntriesRegExp,src);if(null===match)break;src=stringSlice(src,0,src.length-match[0].length),"sourceURL"===match[3]?sourceURL=match[4]:"sourceURL"===match[1]&&(sourceURL=match[2])}return sourceURL}))},({imports:$h‍_imports,liveVar:$h‍_live,onceVar:$h‍_once,importMeta:$h‍____meta})=>{let FERAL_REG_EXP,SyntaxError,stringReplace,stringSearch,stringSlice,stringSplit,freeze,getSourceURL;function getLineNumber(src,pattern){const index=stringSearch(src,pattern);if(index<0)return-1;const adjustment="\n"===src[index]?1:0;return stringSplit(stringSlice(src,0,index),"\n").length+adjustment}$h‍_imports([["./commons.js",[["FERAL_REG_EXP",[$h‍_a=>FERAL_REG_EXP=$h‍_a]],["SyntaxError",[$h‍_a=>SyntaxError=$h‍_a]],["stringReplace",[$h‍_a=>stringReplace=$h‍_a]],["stringSearch",[$h‍_a=>stringSearch=$h‍_a]],["stringSlice",[$h‍_a=>stringSlice=$h‍_a]],["stringSplit",[$h‍_a=>stringSplit=$h‍_a]],["freeze",[$h‍_a=>freeze=$h‍_a]]]],["./get-source-url.js",[["getSourceURL",[$h‍_a=>getSourceURL=$h‍_a]]]]]);const htmlCommentPattern=new FERAL_REG_EXP("(?:\x3c!--|--\x3e)","g"),rejectHtmlComments=src=>{const lineNumber=getLineNumber(src,htmlCommentPattern);if(lineNumber<0)return src;const name=getSourceURL(src);throw SyntaxError(`Possible HTML comment rejected at ${name}:${lineNumber}. (SES_HTML_COMMENT_REJECTED)`)};$h‍_once.rejectHtmlComments(rejectHtmlComments);const evadeHtmlCommentTest=src=>stringReplace(src,htmlCommentPattern,(match=>"<"===match[0]?"< ! --":"-- >"));$h‍_once.evadeHtmlCommentTest(evadeHtmlCommentTest);const importPattern=new FERAL_REG_EXP("(^|[^.]|\\.\\.\\.)\\bimport(\\s*(?:\\(|/[/*]))","g"),rejectImportExpressions=src=>{const lineNumber=getLineNumber(src,importPattern);if(lineNumber<0)return src;const name=getSourceURL(src);throw SyntaxError(`Possible import expression rejected at ${name}:${lineNumber}. (SES_IMPORT_REJECTED)`)};$h‍_once.rejectImportExpressions(rejectImportExpressions);const evadeImportExpressionTest=src=>stringReplace(src,importPattern,((_,p1,p2)=>`${p1}__import__${p2}`));$h‍_once.evadeImportExpressionTest(evadeImportExpressionTest);const someDirectEvalPattern=new FERAL_REG_EXP("(^|[^.])\\beval(\\s*\\()","g"),rejectSomeDirectEvalExpressions=src=>{const lineNumber=getLineNumber(src,someDirectEvalPattern);if(lineNumber<0)return src;const name=getSourceURL(src);throw SyntaxError(`Possible direct eval expression rejected at ${name}:${lineNumber}. (SES_EVAL_REJECTED)`)};$h‍_once.rejectSomeDirectEvalExpressions(rejectSomeDirectEvalExpressions);const mandatoryTransforms=source=>(source=rejectHtmlComments(source),source=rejectImportExpressions(source));$h‍_once.mandatoryTransforms(mandatoryTransforms);const applyTransforms=(source,transforms)=>{for(const transform of transforms)source=transform(source);return source};$h‍_once.applyTransforms(applyTransforms);const transforms=freeze({rejectHtmlComments:freeze(rejectHtmlComments),evadeHtmlCommentTest:freeze(evadeHtmlCommentTest),rejectImportExpressions:freeze(rejectImportExpressions),evadeImportExpressionTest:freeze(evadeImportExpressionTest),rejectSomeDirectEvalExpressions:freeze(rejectSomeDirectEvalExpressions),mandatoryTransforms:freeze(mandatoryTransforms),applyTransforms:freeze(applyTransforms)});$h‍_once.transforms(transforms)},({imports:$h‍_imports,liveVar:$h‍_live,onceVar:$h‍_once,importMeta:$h‍____meta})=>{let arrayFilter,arrayIncludes,getOwnPropertyDescriptor,getOwnPropertyNames,objectHasOwnProperty,regexpTest;$h‍_imports([["./commons.js",[["arrayFilter",[$h‍_a=>arrayFilter=$h‍_a]],["arrayIncludes",[$h‍_a=>arrayIncludes=$h‍_a]],["getOwnPropertyDescriptor",[$h‍_a=>getOwnPropertyDescriptor=$h‍_a]],["getOwnPropertyNames",[$h‍_a=>getOwnPropertyNames=$h‍_a]],["objectHasOwnProperty",[$h‍_a=>objectHasOwnProperty=$h‍_a]],["regexpTest",[$h‍_a=>regexpTest=$h‍_a]]]]]);const keywords=["await","break","case","catch","class","const","continue","debugger","default","delete","do","else","export","extends","finally","for","function","if","import","in","instanceof","new","return","super","switch","this","throw","try","typeof","var","void","while","with","yield","let","static","enum","implements","package","protected","interface","private","public","await","null","true","false","this","arguments"],identifierPattern=/^[a-zA-Z_$][\w$]*$/,isValidIdentifierName=name=>"eval"!==name&&!arrayIncludes(keywords,name)&&regexpTest(identifierPattern,name);function isImmutableDataProperty(obj,name){const desc=getOwnPropertyDescriptor(obj,name);return desc&&!1===desc.configurable&&!1===desc.writable&&objectHasOwnProperty(desc,"value")}$h‍_once.isValidIdentifierName(isValidIdentifierName);$h‍_once.getScopeConstants(((globalObject,moduleLexicals={})=>{const globalObjectNames=getOwnPropertyNames(globalObject),moduleLexicalNames=getOwnPropertyNames(moduleLexicals),moduleLexicalConstants=arrayFilter(moduleLexicalNames,(name=>isValidIdentifierName(name)&&isImmutableDataProperty(moduleLexicals,name)));return{globalObjectConstants:arrayFilter(globalObjectNames,(name=>!arrayIncludes(moduleLexicalNames,name)&&isValidIdentifierName(name)&&isImmutableDataProperty(globalObject,name))),moduleLexicalConstants:moduleLexicalConstants}}))},({imports:$h‍_imports,liveVar:$h‍_live,onceVar:$h‍_once,importMeta:$h‍____meta})=>{let FERAL_FUNCTION,arrayJoin,apply,getScopeConstants;function buildOptimizer(constants,name){return 0===constants.length?"":`const {${arrayJoin(constants,",")}} = this.${name};`}$h‍_imports([["./commons.js",[["FERAL_FUNCTION",[$h‍_a=>FERAL_FUNCTION=$h‍_a]],["arrayJoin",[$h‍_a=>arrayJoin=$h‍_a]],["apply",[$h‍_a=>apply=$h‍_a]]]],["./scope-constants.js",[["getScopeConstants",[$h‍_a=>getScopeConstants=$h‍_a]]]]]);$h‍_once.makeEvaluate((context=>{const{globalObjectConstants:globalObjectConstants,moduleLexicalConstants:moduleLexicalConstants}=getScopeConstants(context.globalObject,context.moduleLexicals),globalObjectOptimizer=buildOptimizer(globalObjectConstants,"globalObject"),moduleLexicalOptimizer=buildOptimizer(moduleLexicalConstants,"moduleLexicals"),evaluateFactory=FERAL_FUNCTION(`\n    with (this.scopeTerminator) {\n      with (this.globalObject) {\n        with (this.moduleLexicals) {\n          with (this.evalScope) {\n            ${globalObjectOptimizer}\n            ${moduleLexicalOptimizer}\n            return function() {\n              'use strict';\n              return eval(arguments[0]);\n            };\n          }\n        }\n      }\n    }\n  `);return apply(evaluateFactory,context,[])}))},({imports:$h‍_imports,liveVar:$h‍_live,onceVar:$h‍_once,importMeta:$h‍____meta})=>{let apply,freeze,strictScopeTerminator,createSloppyGlobalsScopeTerminator,makeEvalScopeKit,applyTransforms,mandatoryTransforms,makeEvaluate,assert;$h‍_imports([["./commons.js",[["apply",[$h‍_a=>apply=$h‍_a]],["freeze",[$h‍_a=>freeze=$h‍_a]]]],["./strict-scope-terminator.js",[["strictScopeTerminator",[$h‍_a=>strictScopeTerminator=$h‍_a]]]],["./sloppy-globals-scope-terminator.js",[["createSloppyGlobalsScopeTerminator",[$h‍_a=>createSloppyGlobalsScopeTerminator=$h‍_a]]]],["./eval-scope.js",[["makeEvalScopeKit",[$h‍_a=>makeEvalScopeKit=$h‍_a]]]],["./transforms.js",[["applyTransforms",[$h‍_a=>applyTransforms=$h‍_a]],["mandatoryTransforms",[$h‍_a=>mandatoryTransforms=$h‍_a]]]],["./make-evaluate.js",[["makeEvaluate",[$h‍_a=>makeEvaluate=$h‍_a]]]],["./error/assert.js",[["assert",[$h‍_a=>assert=$h‍_a]]]]]);const{Fail:Fail}=assert;$h‍_once.makeSafeEvaluator((({globalObject:globalObject,moduleLexicals:moduleLexicals={},globalTransforms:globalTransforms=[],sloppyGlobalsMode:sloppyGlobalsMode=!1})=>{const scopeTerminator=sloppyGlobalsMode?createSloppyGlobalsScopeTerminator(globalObject):strictScopeTerminator,evalScopeKit=makeEvalScopeKit(),{evalScope:evalScope}=evalScopeKit,evaluateContext=freeze({evalScope:evalScope,moduleLexicals:moduleLexicals,globalObject:globalObject,scopeTerminator:scopeTerminator});let evaluate;return{safeEvaluate:(source,options)=>{const{localTransforms:localTransforms=[]}=options||{};let err;evaluate||(evaluate=makeEvaluate(evaluateContext)),source=applyTransforms(source,[...localTransforms,...globalTransforms,mandatoryTransforms]);try{return evalScopeKit.allowNextEvalToBeUnsafe(),apply(evaluate,globalObject,[source])}catch(e){throw err=e,e}finally{const unsafeEvalWasStillExposed="eval"in evalScope;delete evalScope.eval,unsafeEvalWasStillExposed&&(evalScopeKit.revoked={err:err},Fail`handler did not reset allowNextEvalToBeUnsafe ${err}`)}}}}))},({imports:$h‍_imports,liveVar:$h‍_live,onceVar:$h‍_once,importMeta:$h‍____meta})=>{let WeakSet,defineProperty,freeze,functionPrototype,functionToString,stringEndsWith,weaksetAdd,weaksetHas;$h‍_imports([["./commons.js",[["WeakSet",[$h‍_a=>WeakSet=$h‍_a]],["defineProperty",[$h‍_a=>defineProperty=$h‍_a]],["freeze",[$h‍_a=>freeze=$h‍_a]],["functionPrototype",[$h‍_a=>functionPrototype=$h‍_a]],["functionToString",[$h‍_a=>functionToString=$h‍_a]],["stringEndsWith",[$h‍_a=>stringEndsWith=$h‍_a]],["weaksetAdd",[$h‍_a=>weaksetAdd=$h‍_a]],["weaksetHas",[$h‍_a=>weaksetHas=$h‍_a]]]]]);let markVirtualizedNativeFunction;$h‍_once.tameFunctionToString((()=>{if(void 0===markVirtualizedNativeFunction){const virtualizedNativeFunctions=new WeakSet;defineProperty(functionPrototype,"toString",{value:{toString(){const str=functionToString(this);return stringEndsWith(str,") { [native code] }")||!weaksetHas(virtualizedNativeFunctions,this)?str:`function ${this.name}() { [native code] }`}}.toString}),markVirtualizedNativeFunction=freeze((func=>weaksetAdd(virtualizedNativeFunctions,func)))}return markVirtualizedNativeFunction}))},({imports:$h‍_imports,liveVar:$h‍_live,onceVar:$h‍_once,importMeta:$h‍____meta})=>{let TypeError,globalThis,getOwnPropertyDescriptor,defineProperty;function tameDomains(domainTaming="safe"){if("safe"!==domainTaming&&"unsafe"!==domainTaming)throw TypeError(`unrecognized domainTaming ${domainTaming}`);if("unsafe"!==domainTaming&&"object"==typeof globalThis.process&&null!==globalThis.process){const domainDescriptor=getOwnPropertyDescriptor(globalThis.process,"domain");if(void 0!==domainDescriptor&&void 0!==domainDescriptor.get)throw TypeError("SES failed to lockdown, Node.js domains have been initialized (SES_NO_DOMAINS)");defineProperty(globalThis.process,"domain",{value:null,configurable:!1,writable:!1,enumerable:!1})}}$h‍_imports([["./commons.js",[["TypeError",[$h‍_a=>TypeError=$h‍_a]],["globalThis",[$h‍_a=>globalThis=$h‍_a]],["getOwnPropertyDescriptor",[$h‍_a=>getOwnPropertyDescriptor=$h‍_a]],["defineProperty",...

// 
// ...abridged... 
// 

 ...{provideCompartmentEvaluator:cells[40].provideCompartmentEvaluator.set,compartmentEvaluate:cells[40].compartmentEvaluate.set},importMeta:{}}),functors[41]({imports(entries){const map=new Map(entries);observeImports(map,"./error/assert.js",8),observeImports(map,"./module-proxy.js",39),observeImports(map,"./commons.js",0),observeImports(map,"./compartment-evaluate.js",40)},liveVar:{},onceVar:{makeThirdPartyModuleInstance:cells[41].makeThirdPartyModuleInstance.set,makeModuleInstance:cells[41].makeModuleInstance.set},importMeta:{}}),functors[42]({imports(entries){const map=new Map(entries);observeImports(map,"./error/assert.js",8),observeImports(map,"./module-instance.js",41),observeImports(map,"./commons.js",0)},liveVar:{},onceVar:{link:cells[42].link.set,instantiate:cells[42].instantiate.set},importMeta:{}}),functors[43]({imports(entries){const map=new Map(entries);observeImports(map,"./commons.js",0),observeImports(map,"./global-object.js",22),observeImports(map,"./permits.js",10),observeImports(map,"./module-load.js",38),observeImports(map,"./module-link.js",42),observeImports(map,"./module-proxy.js",39),observeImports(map,"./error/assert.js",8),observeImports(map,"./compartment-evaluate.js",40),observeImports(map,"./make-safe-evaluator.js",30)},liveVar:{},onceVar:{InertCompartment:cells[43].InertCompartment.set,CompartmentPrototype:cells[43].CompartmentPrototype.set,makeCompartmentConstructor:cells[43].makeCompartmentConstructor.set},importMeta:{}}),functors[44]({imports(entries){const map=new Map(entries);observeImports(map,"./commons.js",0),observeImports(map,"./compartment.js",43)},liveVar:{},onceVar:{getAnonymousIntrinsics:cells[44].getAnonymousIntrinsics.set},importMeta:{}}),functors[45]({imports(entries){observeImports(new Map(entries),"./commons.js",0)},liveVar:{},onceVar:{tameHarden:cells[45].tameHarden.set},importMeta:{}}),functors[46]({imports(entries){observeImports(new Map(entries),"./commons.js",0)},liveVar:{},onceVar:{tameSymbolConstructor:cells[46].tameSymbolConstructor.set},importMeta:{}}),functors[47]({imports(entries){const map=new Map(entries);observeImports(map,"@endo/env-options",3),observeImports(map,"./commons.js",0),observeImports(map,"./make-hardener.js",9),observeImports(map,"./intrinsics.js",11),observeImports(map,"./permits-intrinsics.js",12),observeImports(map,"./tame-function-constructors.js",13),observeImports(map,"./tame-date-constructor.js",14),observeImports(map,"./tame-math-object.js",15),observeImports(map,"./tame-regexp-constructor.js",16),observeImports(map,"./enable-property-overrides.js",18),observeImports(map,"./tame-locale-methods.js",19),observeImports(map,"./global-object.js",22),observeImports(map,"./make-safe-evaluator.js",30),observeImports(map,"./permits.js",10),observeImports(map,"./tame-function-tostring.js",31),observeImports(map,"./tame-domains.js",32),observeImports(map,"./error/tame-console.js",35),observeImports(map,"./error/tame-error-constructor.js",37),observeImports(map,"./error/assert.js",8),observeImports(map,"./get-anonymous-intrinsics.js",44),observeImports(map,"./compartment.js",43),observeImports(map,"./tame-harden.js",45),observeImports(map,"./tame-symbol-constructor.js",46)},liveVar:{},onceVar:{repairIntrinsics:cells[47].repairIntrinsics.set},importMeta:{}}),functors[48]({imports(entries){const map=new Map(entries);observeImports(map,"./assert-sloppy-mode.js",1),observeImports(map,"./commons.js",0),observeImports(map,"./lockdown.js",47)},liveVar:{},onceVar:{},importMeta:{}}),functors[49]({imports(entries){const map=new Map(entries);observeImports(map,"./commons.js",0),observeImports(map,"./compartment.js",43),observeImports(map,"./tame-function-tostring.js",31),observeImports(map,"./intrinsics.js",11)},liveVar:{},onceVar:{},importMeta:{}}),functors[50]({imports(entries){const map=new Map(entries);observeImports(map,"./commons.js",0),observeImports(map,"./error/assert.js",8)},liveVar:{},onceVar:{},importMeta:{}}),functors[51]({imports(entries){const map=new Map(entries);observeImports(map,"./src/lockdown-shim.js",48),observeImports(map,"./src/compartment-shim.js",49),observeImports(map,"./src/assert-shim.js",50)},liveVar:{},onceVar:{},importMeta:{}}),cells[cells.length-1]["*"].get()})();